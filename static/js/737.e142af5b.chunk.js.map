{"version":3,"file":"static/js/737.e142af5b.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.js","components/Loader.js","components/CardList/CardList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Styles/FilterContainer.styled.js","pages/FilterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  justify-content: center;\n`;\nexport const AdvertsSection = styled.main`\n  flex-grow: 1;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{ margin: 'auto' }}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCampers,\n  selectIsLoading,\n  selectError,\n} from '../../redux/cards/selectors';\nimport { fetchCards } from '../../redux/cards/operations';\nimport { Card } from 'components/Card/Card';\nimport { AdvertsSection, StyledList } from './CardList.styled';\nimport { CustomButton } from 'components/Button/Button';\nimport { Loader } from 'components/Loader';\n\nexport const CardList = () => {\n  const dispatch = useDispatch();\n  const campers = useSelector(selectCampers);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [visibleCampersCount, setVisibleCampersCount] = useState(4);\n\n  const handleLoadMore = () => {\n    setVisibleCampersCount(prevCount => Math.min(prevCount + 4));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch]);\n\n  return (\n    <AdvertsSection>\n      {error && <div>Error: {error}</div>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <StyledList>\n          {campers.slice(0, visibleCampersCount).map(camper => (\n            <Card key={camper._id} {...camper} />\n          ))}\n        </StyledList>\n      )}\n      {visibleCampersCount < campers.length && (\n        <CustomButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          variant=\"contained\"\n          borderColor=\"1px solid rgba(71, 84, 103, 0.2)\"\n          backgroundColor=\"transparent\"\n          textColor=\"#101828\"\n          hoverBackgroundColor=\"transparent\"\n          hoverBorderColor=\"#E44848\"\n          style={{\n            marginTop: '68px',\n\n            marginLeft: '467px',\n          }}\n        >\n          {' '}\n          Load more\n          {/* {isLoading ? <Loader /> : 'Load more'} */}\n        </CustomButton>\n      )}\n    </AdvertsSection>\n  );\n};\n","import styled from '@emotion/styled';\nexport const SideBar = styled.aside`\n  // display: flex;\n  width: 360px;\n`;\nexport const LocatioWrap = styled.div``;\nexport const Label = styled.label``;\nexport const Input = styled.input``;\nexport const VehicleEquipment = styled.div``;\nexport const VehicleType = styled.div``;\nexport const FilterBtn = styled.button`\n  border-radius: 10px;\n  padding: 17px 40px;\n  width: 112px;\n  height: 95px;\n  background-color: transparent;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterBtn, Input, Label, LocatioWrap, SideBar } from './Filter.styled';\nimport sprite from '../sprite.svg';\nimport {\n  updateEquipmentFilter,\n  updateVehicleTypeFilter,\n  setFilter,\n} from '../../redux/cards/campersSlice';\nimport {\n  selectEquipmentFilter,\n  selectFilteredLocation,\n  selectVehicleTypeFilter,\n} from '../../redux/cards/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const locationFilter = useSelector(selectFilteredLocation);\n\n  const handleOnChange = e => {\n    e.preventDefault();\n    dispatch(setFilter(e.target.value));\n  };\n\n  const equipmentFilter = useSelector(selectEquipmentFilter);\n  const vehicleTypeFilter = useSelector(selectVehicleTypeFilter);\n\n  const handleEquipmentFilter = filter => {\n    const newFilter = [...equipmentFilter];\n    const index = newFilter.indexOf(filter);\n    if (index !== -1) {\n      newFilter.splice(index, 1);\n    } else {\n      newFilter.push(filter);\n    }\n    dispatch(updateEquipmentFilter(newFilter));\n  };\n\n  const handleVehicleTypeFilter = filter => {\n    const newFilter = [...vehicleTypeFilter];\n    const index = newFilter.indexOf(filter);\n    if (index !== -1) {\n      newFilter.splice(index, 1);\n    } else {\n      newFilter.push(filter);\n    }\n    dispatch(updateVehicleTypeFilter(newFilter));\n  };\n  return (\n    <SideBar>\n      <LocatioWrap>\n        {' '}\n        <Label>\n          <Input\n            name=\"filter\"\n            type=\"text\"\n            value={locationFilter}\n            onChange={handleOnChange}\n          ></Input>\n        </Label>\n      </LocatioWrap>\n      <h2>Equipment</h2>\n      <FilterBtn\n        // width=\"95px\"\n        // height=\"95px\"\n        onClick={() => handleEquipmentFilter('AC')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#ac-1'} />\n        </svg>\n        AC\n      </FilterBtn>\n      <FilterBtn\n        // width=\"95px\"\n        // height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#automatic-1'} />\n        </svg>\n        Automatic\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"33px\" height=\"33px\">\n          <use xlinkHref={sprite + '#icon-kitchen'} />\n        </svg>\n        Kitchen\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#icon-Tv-1'} />\n        </svg>\n        TV\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"33px\" height=\"33px\">\n          <use xlinkHref={sprite + '#icon-shower'} />\n        </svg>\n        Shower/WC\n      </FilterBtn>\n\n      <h2>Vehicle Type</h2>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('fullyIntegrated')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-van'} />\n        </svg>\n        Fully Integrated\n      </FilterBtn>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('camperVan')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-fully-integrated'} />\n        </svg>\n        Van\n      </FilterBtn>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('camperVan')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-alcov'} />\n        </svg>\n        Alcov\n      </FilterBtn>\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 43px;\n  margin-top: 64px;\n  width: 100%;\n  @media (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n","import { CardList } from 'components/CardList/CardList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FilterContainer } from 'components/Styles/FilterContainer.styled';\n\nconst FilterPage = () => {\n  return (\n    <FilterContainer>\n      <Filter />\n      <CardList />\n    </FilterContainer>\n  );\n};\nexport default FilterPage;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","AdvertsSection","_templateObject2","Loader","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","CardList","dispatch","useDispatch","campers","useSelector","selectCampers","isLoading","selectIsLoading","error","selectError","_useState","useState","_useState2","_slicedToArray","visibleCampersCount","setVisibleCampersCount","useEffect","fetchCards","_jsxs","children","slice","map","camper","Card","_objectSpread","_id","length","CustomButton","onClick","prevCount","Math","min","disabled","variant","borderColor","backgroundColor","textColor","hoverBackgroundColor","hoverBorderColor","style","marginTop","marginLeft","SideBar","LocatioWrap","Label","_templateObject3","Input","_templateObject4","FilterBtn","_templateObject5","_templateObject6","_templateObject7","Filter","locationFilter","selectFilteredLocation","equipmentFilter","selectEquipmentFilter","vehicleTypeFilter","selectVehicleTypeFilter","handleEquipmentFilter","filter","newFilter","_toConsumableArray","index","indexOf","splice","push","updateEquipmentFilter","handleVehicleTypeFilter","updateVehicleTypeFilter","name","type","value","onChange","e","preventDefault","setFilter","target","xlinkHref","sprite","FilterContainer"],"sourceRoot":""}