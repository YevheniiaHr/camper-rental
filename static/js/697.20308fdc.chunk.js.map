{"version":3,"file":"static/js/697.20308fdc.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.js","components/CardList/CardList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Styles/FilterContainer.styled.js","pages/FilterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  justify-content: center;\n`;\nexport const AdvertsSection = styled.main`\n  flex-grow: 1;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCampers,\n  selectIsLoading,\n  selectError,\n} from '../../redux/cards/selectors';\nimport { fetchCards } from '../../redux/cards/operations';\nimport { Card } from 'components/Card/Card';\nimport { AdvertsSection, StyledList } from './CardList.styled';\nimport { CustomButton } from 'components/Button/Button';\n\nexport const CardList = () => {\n  const dispatch = useDispatch();\n  const campers = useSelector(selectCampers);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [visibleCampersCount, setVisibleCampersCount] = useState(4);\n\n  const handleLoadMore = () => {\n    setVisibleCampersCount(prevCount => Math.min(prevCount + campers.length));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch]);\n\n  return (\n    <AdvertsSection>\n      {error && <div>Error: {error}</div>}\n      <StyledList>\n        {campers.slice(0, visibleCampersCount).map(camper => (\n          <Card key={camper._id} {...camper} />\n        ))}\n      </StyledList>\n      {visibleCampersCount < campers.length && (\n        <CustomButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          variant=\"contained\"\n          style={{\n            marginTop: '68px',\n            border: '1px solid rgba(71, 84, 103, 0.2)',\n            backgroundColor: 'transparent',\n            color: '#101828',\n            marginLeft: '467px',\n            transition: 'color 0.3s ease',\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Load more'}\n        </CustomButton>\n      )}\n    </AdvertsSection>\n  );\n};\n","import styled from '@emotion/styled';\nexport const SideBar = styled.aside`\n  // display: flex;\n  width: 360px;\n`;\nexport const LocatioWrap = styled.div``;\nexport const Label = styled.label``;\nexport const Input = styled.input``;\nexport const VehicleEquipment = styled.div``;\nexport const VehicleType = styled.div``;\nexport const FilterBtn = styled.button`\n  border-radius: 10px;\n  padding: 17px 40px;\n  width: 112px;\n  height: 95px;\n  background-color: transparent;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterBtn, Input, Label, LocatioWrap, SideBar } from './Filter.styled';\nimport sprite from '../sprite.svg';\nimport {\n  updateEquipmentFilter,\n  updateVehicleTypeFilter,\n  setFilter,\n} from '../../redux/cards/campersSlice';\nimport {\n  selectEquipmentFilter,\n  selectFilteredLocation,\n  selectVehicleTypeFilter,\n} from '../../redux/cards/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const locationFilter = useSelector(selectFilteredLocation);\n\n  const handleOnChange = e => {\n    e.preventDefault();\n    dispatch(setFilter(e.target.value));\n  };\n\n  const equipmentFilter = useSelector(selectEquipmentFilter);\n  const vehicleTypeFilter = useSelector(selectVehicleTypeFilter);\n\n  const handleEquipmentFilter = filter => {\n    const newFilter = [...equipmentFilter];\n    const index = newFilter.indexOf(filter);\n    if (index !== -1) {\n      newFilter.splice(index, 1);\n    } else {\n      newFilter.push(filter);\n    }\n    dispatch(updateEquipmentFilter(newFilter));\n  };\n\n  const handleVehicleTypeFilter = filter => {\n    const newFilter = [...vehicleTypeFilter];\n    const index = newFilter.indexOf(filter);\n    if (index !== -1) {\n      newFilter.splice(index, 1);\n    } else {\n      newFilter.push(filter);\n    }\n    dispatch(updateVehicleTypeFilter(newFilter));\n  };\n  return (\n    <SideBar>\n      <LocatioWrap>\n        {' '}\n        <Label>\n          <Input\n            name=\"filter\"\n            type=\"text\"\n            value={locationFilter}\n            onChange={handleOnChange}\n          ></Input>\n        </Label>\n      </LocatioWrap>\n      <h2>Equipment</h2>\n      <FilterBtn\n        // width=\"95px\"\n        // height=\"95px\"\n        onClick={() => handleEquipmentFilter('AC')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#ac-1'} />\n        </svg>\n        AC\n      </FilterBtn>\n      <FilterBtn\n        // width=\"95px\"\n        // height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#automatic-1'} />\n        </svg>\n        Automatic\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"33px\" height=\"33px\">\n          <use xlinkHref={sprite + '#icon-kitchen'} />\n        </svg>\n        Kitchen\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"32px\" height=\"32px\">\n          <use xlinkHref={sprite + '#icon-Tv-1'} />\n        </svg>\n        TV\n      </FilterBtn>\n      <FilterBtn\n        width=\"95px\"\n        height=\"95px\"\n        onClick={() => handleEquipmentFilter('Automatic')}\n      >\n        <svg width=\"33px\" height=\"33px\">\n          <use xlinkHref={sprite + '#icon-shower'} />\n        </svg>\n        Shower/WC\n      </FilterBtn>\n\n      <h2>Vehicle Type</h2>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('fullyIntegrated')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-van'} />\n        </svg>\n        Fully Integrated\n      </FilterBtn>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('camperVan')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-fully-integrated'} />\n        </svg>\n        Van\n      </FilterBtn>\n      <FilterBtn onClick={() => handleVehicleTypeFilter('camperVan')}>\n        <svg width=\"40px\" height=\"28px\">\n          <use xlinkHref={sprite + '#icon-alcov'} />\n        </svg>\n        Alcov\n      </FilterBtn>\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 43px;\n  margin-top: 64px;\n  width: 100%;\n  @media (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n","import { CardList } from 'components/CardList/CardList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FilterContainer } from 'components/Styles/FilterContainer.styled';\n\nconst FilterPage = () => {\n  return (\n    <FilterContainer>\n      <Filter />\n      <CardList />\n    </FilterContainer>\n  );\n};\nexport default FilterPage;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","AdvertsSection","_templateObject2","CardList","dispatch","useDispatch","campers","useSelector","selectCampers","isLoading","selectIsLoading","error","selectError","_useState","useState","_useState2","_slicedToArray","visibleCampersCount","setVisibleCampersCount","useEffect","fetchCards","_jsxs","children","_jsx","slice","map","camper","Card","_objectSpread","_id","length","CustomButton","onClick","prevCount","Math","min","disabled","variant","style","marginTop","border","backgroundColor","color","marginLeft","transition","SideBar","LocatioWrap","Label","_templateObject3","Input","_templateObject4","FilterBtn","_templateObject5","_templateObject6","_templateObject7","Filter","locationFilter","selectFilteredLocation","equipmentFilter","selectEquipmentFilter","vehicleTypeFilter","selectVehicleTypeFilter","handleEquipmentFilter","filter","newFilter","_toConsumableArray","index","indexOf","splice","push","updateEquipmentFilter","handleVehicleTypeFilter","updateVehicleTypeFilter","name","type","value","onChange","e","preventDefault","setFilter","target","width","height","xlinkHref","sprite","FilterContainer"],"sourceRoot":""}