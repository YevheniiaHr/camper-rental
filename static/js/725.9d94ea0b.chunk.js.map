{"version":3,"file":"static/js/725.9d94ea0b.chunk.js","mappings":"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","sources":["components/Button/Buttons.styled.js","components/Button/Button.js","components/Card/Card.styled.js","components/Card/ListItem.js","components/Modal/ModalWindow.styled.js","components/Features/Features.styled.js","components/Features/Item.js","components/VehicleDetails/VehicleDetails.styled.js","components/VehicleDetails/VehicleDetails.js","components/Forma/Forma.styled.js","components/Forma/Forma.js","components/Features/Features.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/Modal/ModalWindow.js","components/Card/Card.js","redux/cards/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border-radius: 200px;\n  //   padding: 16px 40px;\n  //   width: 166px;\n  //   height: 56px;\n  background-color: ${({ backgroundColor }) => backgroundColor || '#E44848'};\n  color: ${({ textColor }) => textColor || '#F2F4F7'};\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  width: ${({ width }) => width || '166px'};\n  height: ${({ height }) => height || '56px'};\n  border: ${({ border }) => border || 'none'};\n`;\n","import { Button } from './Buttons.styled';\n\nexport const CustomButton = ({\n  onClick,\n  variant,\n  type,\n  children,\n  ...props\n}) => {\n  return (\n    <Button onClick={onClick} variant={variant} type={type} {...props}>\n      {children}\n    </Button>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 20px;\n  padding: 24px;\n  margin: 0;\n  box-sizing: border-box;\n  max-width: 888px;\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 700px;\n  // }\n\n  // @media screen and (min-width: 1440px) {\n  //   max-width: 888px;\n  // }\n`;\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Price = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Rating = styled.p`\n  display: inline;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-decoration: underline;\n`;\nexport const Location = styled.p`\n  display: inline;\n`;\nexport const Text = styled.p`\n  margin-bottom: 24px;\n  font-size: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\nexport const ListDetails = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const DetailItem = styled.li`\n  background-color: #f2f4f7;\n  border-radius: 100px;\n  padding: 12px 18px;\n  display: flex;\n\n  text-align: center;\n`;\nexport const Img = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n  width: 290px;\n`;\nexport const LocationWrap = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const Container = styled.div`\n  width: 526px;\n  height: 310px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nexport const ItemWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ListWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  // justify-content: space-around;\n`;\nexport const TextDetailItem = styled.p`\n  margin-left: 8px;\n`;\n","import sprite from '../sprite.svg';\nimport { DetailItem, TextDetailItem } from './Card.styled';\n\nexport const ListItem = ({ icon, text }) => {\n  return (\n    <DetailItem>\n      <svg width=\"20px\" height=\"20px\">\n        <use xlinkHref={sprite + `#${icon}`} />\n      </svg>\n      <TextDetailItem>{text}</TextDetailItem>\n    </DetailItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const WrappModal = styled.div`\n  border-radius: 20px;\n  padding: 40px;\n  width: 982px;\n  height: 720px;\n`;\nexport const ContentModal = styled.div``;\nexport const GalleryWrapper = styled.div`\n  width: 902px;\n  // height: 310px;\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const ImageGallery = styled.img`\n  border-radius: 10px;\n  width: 290px;\n  height: 310px;\n`;\nexport const TextModal = styled.p`\n  margin-bottom: 44px;\n`;\nexport const ListAdd = styled.ul`\n  display: flex;\n  gap: 40px;\n  // margin-bottom: 24px;\n  border-bottom: 1px solid #e7e9fc;\n`;\nexport const ItemAdd = styled.li`\n  padding-bottom: 24px;\n`;\nexport const LinkAdd = styled.a`\n  // color: ${({ active }) => (active ? '#E44848' : 'black')};\n  position: relative;\n  font-weight: 600;\n  font-size: 20px;\n  padding-bottom: 24px;\n  &:hover {\n    color: #e44848;\n  }\n  &::after {\n    content: ${({ active }) => (active ? '\"\"' : 'none')};\n    position: absolute;\n    width: 100%;\n    height: 4px;\n    left: 0;\n    bottom: -1px;\n    background-color: #e44848;\n    border-radius: 2px;\n  }\n`;\nexport const TitleModal = styled.h2`\n  margin-bottom: 8px;\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const LocationModal = styled.p`\n  margin-bottom: 16px;\n`;\nexport const PriceModal = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 24px;\n`;\nexport const BtnClose = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n","import styled from '@emotion/styled';\nexport const ListFeatures = styled.ul`\n  margin-top: 44px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const ItemFeature = styled.li`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 100px;\n  padding: 12px 18px;\n  background: #f2f4f7;\n  display: flex;\n  gap: 8px;\n`;\nexport const FeaturesWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DetailsWrapper = styled.div`\n  width: 430px;\n`;\nexport const FormWrapper = styled.div``;\n\nexport const TitleText = styled.h2`\n  font-weight: 600;\n  border-bottom: 1px solid #e7e9fc;\n  margin-top: 44px;\n  margin-bottom: 44px;\n  padding-bottom: 24px;\n`;\nexport const ListDetails = styled.ul``;\nexport const Icon = styled.div`\n  margin-right: 8px;\n`;\n\nexport const Text = styled.div`\n  margin-right: 2px; /* Додати пробіл між значеннями */\n`;\n\nexport const CustomKey = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { CustomKey, Icon, ItemFeature, Text } from './Features.styled';\n\nexport const Item = ({ icon, text, castomKey }) => {\n  return (\n    <ItemFeature>\n      <Icon>{icon}</Icon>\n      <Text>{text}</Text>\n      <CustomKey>\n        {castomKey.charAt(0).toUpperCase() + castomKey.slice(1)}\n      </CustomKey>\n    </ItemFeature>\n  );\n};\n","import styled from '@emotion/styled';\nexport const ItemDetails = styled.li``;\nexport const ListDetails = styled.div`\n  gap: 14px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\nexport const Label = styled.div`\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const Value = styled.div`\n  flex-grow: 1;\n  text-align: right;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Label, ListDetails, Row, Value } from './VehicleDetails.styled';\nimport { selectCampers } from '../../redux/cards/selectors';\n\nexport const VehicleDetails = ({ id }) => {\n  const data = useSelector(selectCampers);\n\n  const selectedData = data.find(item => item._id === id);\n\n  if (!selectedData) {\n    return <div>No data available</div>;\n  }\n  return (\n    <ListDetails>\n      <Row>\n        <Label>Form</Label>\n        <Value>\n          {selectedData.form.charAt(0).toUpperCase() +\n            selectedData.form.slice(1)}\n        </Value>\n      </Row>\n      <Row>\n        <Label>Length</Label>\n        <Value>{selectedData.length}</Value>\n      </Row>\n      <Row>\n        <Label>Width</Label>\n        <Value>{selectedData.width}</Value>\n      </Row>\n      <Row>\n        <Label>Height</Label>\n        <Value>{selectedData.height}</Value>\n      </Row>\n      <Row>\n        <Label>Tank</Label>\n        <Value>{selectedData.tank}</Value>\n      </Row>\n      <Row>\n        <Label>Consumption</Label>\n        <Value>{selectedData.consumption}</Value>\n      </Row>\n    </ListDetails>\n  );\n};\n","import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const FormGroup = styled.label`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n  width: 400px;\n  align-self: center;\n`;\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 56px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const FieldComment = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 114px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 16px;\n  color: red;\n`;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 10px;\n  padding: 24px;\n  width: 448px;\n\n  margin-top: 44px;\n`;\nexport const FormTitle = styled.h2`\n  font-weight: 600;\n  font-size: 20px;\n  margin-top: 24px;\n  margin-left: 24px;\n`;\nexport const FormText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  margin-left: 24px;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormText,\n  FieldComment,\n} from './Forma.styled';\nimport * as Yup from 'yup';\nimport { FormTitle } from './Forma.styled';\nimport { CustomButton } from 'components/Button/Button';\nimport Notiflix from 'notiflix';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().required('Email is required'),\n  date: Yup.string().required('Date is required'),\n  comment: Yup.string(),\n});\n\nexport const Forma = () => {\n  const handleSubmit = action => {\n    Notiflix.Notify.success(`Your order is accepted.`);\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        date: '',\n        comment: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormTitle>Book your campervan now</FormTitle>\n        <FormText>Stay connected! We are always ready to help you.</FormText>\n        <FormGroup>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\" Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          <Field\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <Field\n            name=\"date\"\n            type=\"string\"\n            placeholder=\"Booking date\"\n            pattern=\"(0[1-9]|1[1,2])(\\/|-)(0[1-9]|[12][0-9]|3[01])(\\/|-)(19|20)\\d{2}\"\n          />\n          <ErrorMessage name=\"date\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <FieldComment name=\"comment\" type=\"text\" placeholder=\"Comment\" />\n        </FormGroup>\n        <CustomButton\n          type=\"submit\"\n          style={{\n            marginTop: '24px',\n            marginLeft: '24px',\n          }}\n        >\n          Send\n        </CustomButton>\n      </Form>\n    </Formik>\n  );\n};\n","import {\n  DetailsWrapper,\n  FeaturesWrapper,\n  FormWrapper,\n  ListFeatures,\n  TitleText,\n} from './Features.styled';\nimport sprite from '../sprite.svg';\nimport { Item } from './Item';\nimport { VehicleDetails } from 'components/VehicleDetails/VehicleDetails';\nimport { Forma } from 'components/Forma/Forma';\n\nexport const Features = ({ id, details }) => {\n  const getIconByKey = key => {\n    switch (key) {\n      case 'airConditioner':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-air-conditioner'} />\n          </svg>\n        );\n\n      case 'bathroom':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'kitchen':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-kitchen'} />\n          </svg>\n        );\n      case 'beds':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-bed'} />\n          </svg>\n        );\n      case 'TV':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-tv'} />\n          </svg>\n        );\n      case 'CD':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-cd'} />\n          </svg>\n        );\n      case 'radio':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-radio'} />\n          </svg>\n        );\n      case 'shower':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'toilet':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-toilet'} />\n          </svg>\n        );\n      case 'freezer':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-freezer'} />\n          </svg>\n        );\n      case 'hob':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-hob'} />\n          </svg>\n        );\n      case 'microwave':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-microwave'} />\n          </svg>\n        );\n      case 'gas':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-gas'} />\n          </svg>\n        );\n      case 'water':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-water'} />\n          </svg>\n        );\n\n      default:\n        return null; // Повертаємо null, якщо іконка не знайдена\n    }\n  };\n  return (\n    <FeaturesWrapper>\n      <DetailsWrapper>\n        <ListFeatures>\n          {details &&\n            Object.entries(details).map(([key, value]) => {\n              if (value !== 0 && value !== false) {\n                return (\n                  <Item\n                    key={key}\n                    icon={getIconByKey(key)}\n                    text={value}\n                    castomKey={key}\n                  />\n                );\n              }\n              return null;\n            })}\n        </ListFeatures>\n        <TitleText>Vehicle details</TitleText>\n        <VehicleDetails id={id} />\n      </DetailsWrapper>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </FeaturesWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nexport const CommonReviewsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ReviewsContainer = styled.div`\n  width: 430px;\n  margin-top: 44px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const UserReview = styled.div``;\nexport const UserName = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n`;\nexport const UserRating = styled.p``;\nexport const UserComment = styled.p``;\n","import sprite from '../sprite.svg';\nimport { FormWrapper } from 'components/Features/Features.styled';\nimport {\n  CommonReviewsContainer,\n  ReviewsContainer,\n  UserComment,\n  UserName,\n  UserReview,\n} from './Reviews.styled';\nimport { Forma } from 'components/Forma/Forma';\nimport { Avatar } from '@mui/material';\n\nexport const Reviews = ({ reviews }) => {\n  const getRatingStars = rating => {\n    let stars = [];\n    for (let i = 1; i <= 5; i++) {\n      if (i <= rating) {\n        stars.push(`icon-Rating-${i}`);\n      } else {\n        stars.push(`icon-Rating-nofill-${i}`);\n      }\n    }\n    return stars;\n  };\n\n  return (\n    <CommonReviewsContainer>\n      <ReviewsContainer>\n        {reviews.map((item, index) => (\n          <UserReview key={index}>\n            <Avatar>{item.reviewer_name.charAt(0).toUpperCase()}</Avatar>\n            <UserName>{item.reviewer_name}</UserName>\n\n            {getRatingStars(item.reviewer_rating).map((icon, index) => (\n              <svg key={index} width=\"16px\" height=\"16px\">\n                <use xlinkHref={`${sprite}#${icon}`} />\n              </svg>\n            ))}\n\n            <UserComment> {item.comment}</UserComment>\n          </UserReview>\n        ))}\n      </ReviewsContainer>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </CommonReviewsContainer>\n  );\n};\n","import { LocationWrap, Rating, TitleBox } from 'components/Card/Card.styled';\nimport {\n  ContentModal,\n  GalleryWrapper,\n  ImageGallery,\n  LinkAdd,\n  ListAdd,\n  TextModal,\n  WrappModal,\n  TitleModal,\n  LocationModal,\n  PriceModal,\n  ItemAdd,\n  BtnClose,\n} from './ModalWindow.styled';\nimport Modal from 'react-modal';\nimport sprite from '../sprite.svg';\nimport { useState } from 'react';\nimport { Features } from 'components/Features/Features';\nimport { Reviews } from 'components/Reviews/Reviews';\nModal.setAppElement('#root');\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    width: '100vw',\n    height: '100vh',\n    zIndex: '1200',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    overflow: 'aria-hidden',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nexport const ModalWindow = ({ isOpen, onClose, data }) => {\n  const [activeTab, setActiveTab] = useState('null');\n\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  const closeOnWrapper = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return (\n    <>\n      {isOpen && (\n        <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n          <WrappModal onClick={closeOnWrapper}>\n            <ContentModal>\n              <div>\n                <TitleBox>\n                  <TitleModal>{data.name}</TitleModal>\n                  <BtnClose onClick={onClose}>\n                    <svg width=\"20px\" height=\"20px\">\n                      <use xlinkHref={sprite + '#icon-close'} />\n                    </svg>\n                  </BtnClose>\n                </TitleBox>\n                <LocationWrap>\n                  <Rating>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-Rating'} />\n                    </svg>\n                    {data.rating} ({data.reviews.length} Reviews)\n                  </Rating>\n                  <LocationModal>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-map-pin'} />\n                    </svg>{' '}\n                    {data.location}\n                  </LocationModal>\n                </LocationWrap>\n                <PriceModal>€{data.price},00</PriceModal>\n                <GalleryWrapper>\n                  {data.gallery.map((name, index) => (\n                    <ImageGallery\n                      key={index}\n                      src={name}\n                      alt={`Image ${index + 1}`}\n                    />\n                  ))}\n                </GalleryWrapper>\n                <TextModal>{data.description}</TextModal>\n              </div>\n              <ListAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => handleTabChange('features')}\n                    active={activeTab === 'features'}\n                  >\n                    Features\n                  </LinkAdd>\n                </ItemAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => handleTabChange('reviews')}\n                    active={activeTab === 'reviews'}\n                  >\n                    Reviews\n                  </LinkAdd>\n                </ItemAdd>\n              </ListAdd>\n              {activeTab === 'features' && (\n                <Features id={data._id} details={data.details} />\n              )}\n\n              {activeTab === 'reviews' && <Reviews reviews={data.reviews} />}\n            </ContentModal>\n          </WrappModal>\n        </Modal>\n      )}\n    </>\n  );\n};\n","import sprite from '../sprite.svg';\nimport { CustomButton } from 'components/Button/Button';\n\nimport {\n  Title,\n  Price,\n  Rating,\n  Location,\n  Text,\n  Item,\n  Img,\n  Container,\n  TitleBox,\n  ItemWrapper,\n  LocationWrap,\n  ListDetails,\n  ListWrap,\n} from './Card.styled';\nimport { ListItem } from './ListItem';\nimport { useState } from 'react';\n\nimport { ModalWindow } from 'components/Modal/ModalWindow';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFavoriteCampers } from '../../redux/cards/selectors';\nimport { addFavorite, deleteFavorite } from '../../redux/cards/campersSlice';\nModal.setAppElement('#modal');\n\nexport const Card = ({\n  _id,\n  name,\n  price,\n  rating,\n  location,\n  description,\n  gallery,\n  reviews,\n  details,\n}) => {\n  const favorite = useSelector(selectFavoriteCampers);\n  const dispatch = useDispatch();\n  const isFavorite = favorite.find(item => item._id === _id);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleShowMore = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleFavoriteToggle = () => {\n    isFavorite\n      ? dispatch(\n          deleteFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            details,\n          })\n        )\n      : dispatch(\n          addFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            details,\n          })\n        );\n  };\n  const iconData = [\n    { icon: 'icon-adults', text: '3 adults' },\n    { icon: 'automatic-1', text: 'Automatic' },\n    { icon: 'icon-petrol', text: 'Petrol' },\n    { icon: 'icon-kitchen', text: 'Kitchen' },\n    { icon: 'icon-bed', text: '2 beds' },\n    { icon: 'ac-1', text: 'AC' },\n  ];\n  return (\n    <Item>\n      <ItemWrapper>\n        <Img src={gallery[0]} alt={name} />\n\n        <Container>\n          <TitleBox>\n            <Title>{name}</Title>\n            <Price>€{price},00</Price>\n            <CustomButton\n              style={{\n                width: '16px',\n                height: '16px',\n                backgroundColor: 'transparent',\n              }}\n              onClick={handleFavoriteToggle}\n              type=\"button\"\n            >\n              {isFavorite ? (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart-fill'} />\n                </svg>\n              ) : (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart'} />\n                </svg>\n              )}\n            </CustomButton>\n          </TitleBox>\n\n          <LocationWrap>\n            <Rating>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-Rating'} />\n              </svg>\n              {rating} ({reviews.length} Reviews)\n            </Rating>\n            <Location>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-map-pin'} />\n              </svg>\n              {location}\n            </Location>\n          </LocationWrap>\n          <Text>{description} ...</Text>\n          <ListWrap>\n            <ListDetails>\n              {iconData.map((item, index) => (\n                <ListItem key={index} icon={item.icon} text={item.text} />\n              ))}\n            </ListDetails>\n            <CustomButton onClick={handleShowMore} type=\"button\">\n              Show More\n            </CustomButton>\n          </ListWrap>\n        </Container>\n      </ItemWrapper>\n      <ModalWindow\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        data={{\n          _id,\n          name,\n          price,\n          rating,\n          location,\n          reviews,\n          gallery,\n          description,\n          details,\n        }}\n      ></ModalWindow>\n    </Item>\n  );\n};\n","import { createSelector } from 'reselect';\nexport const selectError = state => state.campers.error;\nexport const selectIsLoading = state => state.campers.isLoading;\nexport const selectCampers = state => state.campers.campers;\nexport const selectFilters = state => state.campers.filters;\nexport const selectFavoriteCampers = state => state.campers.favorite;\n\nexport const selectFilteredLocation = createSelector(\n  [selectFilters],\n  filters => filters.location\n);\n\nexport const selectEquipmentFilter = createSelector(\n  [selectFilters],\n  filters => filters.equipment\n);\n\nexport const selectVehicleTypeFilter = createSelector(\n  [selectFilters],\n  filters => filters.vehicleType\n);\n\nexport const selectFilteredCampers = createSelector(\n  [\n    selectCampers,\n    selectFilteredLocation,\n    selectEquipmentFilter,\n    selectVehicleTypeFilter,\n  ],\n  (campers, location, equipment, vehicleType) => {\n    return campers.filter(camper => {\n      const locationMatch =\n        !location ||\n        camper.location.toLowerCase().includes(location.toLowerCase());\n\n      const equipmentMatch =\n        !equipment ||\n        (typeof equipment === 'string' &&\n          camper.details[equipment.toLowerCase()]);\n\n      const vehicleTypeMatch =\n        !vehicleType ||\n        (Array.isArray(vehicleType) &&\n          vehicleType.includes(camper.form.toLowerCase()));\n\n      return locationMatch && equipmentMatch && vehicleTypeMatch;\n    });\n  }\n);\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","_ref","backgroundColor","_ref2","textColor","_ref3","fontSize","_ref4","width","_ref5","height","_ref6","border","CustomButton","onClick","variant","type","children","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Item","Title","_templateObject2","Price","_templateObject3","Rating","_templateObject4","Location","_templateObject5","Text","_templateObject6","ListDetails","_templateObject7","DetailItem","_templateObject8","Img","_templateObject9","LocationWrap","_templateObject10","Container","_templateObject11","TitleBox","_templateObject12","ItemWrapper","_templateObject13","ListWrap","_templateObject14","TextDetailItem","_templateObject15","ListItem","icon","text","_jsxs","xlinkHref","sprite","concat","WrappModal","ContentModal","GalleryWrapper","ImageGallery","TextModal","ListAdd","ItemAdd","LinkAdd","active","TitleModal","LocationModal","PriceModal","BtnClose","ListFeatures","ItemFeature","FeaturesWrapper","DetailsWrapper","FormWrapper","TitleText","Icon","CustomKey","castomKey","charAt","toUpperCase","slice","Row","Label","Value","VehicleDetails","id","selectedData","useSelector","selectCampers","find","item","_id","form","length","tank","consumption","FormGroup","Field","FormikField","FieldComment","ErrorMessage","FormikError","Form","FormikForm","FormTitle","FormText","FormSchema","Yup","shape","name","required","email","date","comment","Forma","Formik","initialValues","validationSchema","onSubmit","action","Notiflix","resetForm","placeholder","pattern","component","style","marginTop","marginLeft","Features","details","getIconByKey","key","Object","entries","map","_slicedToArray","value","CommonReviewsContainer","ReviewsContainer","UserReview","UserName","UserComment","Reviews","reviews","getRatingStars","rating","stars","i","push","index","Avatar","reviewer_name","reviewer_rating","Modal","customStyles","overlay","position","zIndex","overflow","content","top","left","right","bottom","marginRight","transform","ModalWindow","isOpen","onClose","data","_useState","useState","_useState2","activeTab","setActiveTab","handleTabChange","tab","_Fragment","onRequestClose","event","target","currentTarget","location","price","gallery","src","alt","description","Card","favorite","selectFavoriteCampers","dispatch","useDispatch","isFavorite","isModalOpen","setIsModalOpen","deleteFavorite","addFavorite","selectError","state","campers","error","selectIsLoading","isLoading","selectFilters","filters","selectFilteredLocation","createSelector","selectEquipmentFilter","equipment","selectVehicleTypeFilter","vehicleType","filter","camper","locationMatch","toLowerCase","includes","equipmentMatch","vehicleTypeMatch","Array","isArray"],"sourceRoot":""}