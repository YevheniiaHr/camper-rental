{"version":3,"file":"static/js/725.2941bf32.chunk.js","mappings":"qLAEaA,E,OAASC,EAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iRAGb,SAAAC,GAAkB,OAAAA,EAAfC,iBAAyC,SAAS,IAChE,SAAAC,GAAY,OAAAA,EAATC,WAA6B,SAAS,IACrC,SAAAC,GAAW,OAAAA,EAARC,UAA2B,MAAM,IACxC,SAAAC,GAAQ,OAAAA,EAALC,OAAqB,OAAO,IAC9B,SAAAC,GAAS,OAAAA,EAANC,QAAuB,MAAM,IAChC,SAAAC,GAAS,OAAAA,EAANC,QAAuB,kCAAkC,IAIhD,SAAAC,GAAuB,OAAAA,EAApBC,sBACG,SAAS,IACnB,SAAAC,GAAmB,OAAAA,EAAhBC,kBAA2C,SAAS,I,qGCd9DC,EAAe,SAAHhB,GAUlB,IATLiB,EAAOjB,EAAPiB,QACAC,EAAOlB,EAAPkB,QACAC,EAAInB,EAAJmB,KACAC,EAAQpB,EAARoB,SACAL,EAAgBf,EAAhBe,iBACAJ,EAAMX,EAANW,OACAU,EAAKrB,EAALqB,MACAC,EAAWtB,EAAXsB,YACGC,GAAKC,EAAAA,EAAAA,GAAAxB,EAAAyB,GAER,OACEC,EAAAA,EAAAA,KAAC9B,GAAM+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLV,QAASA,EACTC,QAASA,EACTC,KAAMA,EACNJ,iBAAkBA,EAClBJ,OAAQA,EACRU,MAAOA,EACPC,YAAaA,GACTC,GAAK,IAAAH,SAERA,IAGP,C,kOCzBaQ,GAAO/B,GAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,iUAgBhB8B,GAAQhC,GAAAA,EAAAA,GAASiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,mDAIjBgC,GAAQlC,GAAAA,EAAAA,EAAQmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,mDAIhBkC,GAASpC,GAAAA,EAAAA,EAAQqC,IAAAA,GAAAnC,EAAAA,GAAAA,GAAA,4HAOjBoC,GAAWtC,GAAAA,EAAAA,EAAQuC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,8BAGnBsC,GAAOxC,GAAAA,EAAAA,EAAQyC,IAAAA,GAAAvC,EAAAA,GAAAA,GAAA,+HAOfwC,GAAc1C,GAAAA,EAAAA,GAAS2C,IAAAA,GAAAzC,EAAAA,GAAAA,GAAA,6DAKvB0C,GAAa5C,GAAAA,EAAAA,GAAS6C,IAAAA,GAAA3C,EAAAA,GAAAA,GAAA,mIAQtB4C,GAAM9C,GAAAA,EAAAA,IAAU+C,IAAAA,GAAA7C,EAAAA,GAAAA,GAAA,yEAKhB8C,GAAehD,GAAAA,EAAAA,IAAUiD,IAAAA,GAAA/C,EAAAA,GAAAA,GAAA,kEAKzBgD,GAAYlD,GAAAA,EAAAA,IAAUmD,IAAAA,GAAAjD,EAAAA,GAAAA,GAAA,0FAMtBkD,GAAWpD,GAAAA,EAAAA,IAAUqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,sFAKrBoD,GAActD,GAAAA,EAAAA,IAAUuD,IAAAA,GAAArD,EAAAA,GAAAA,GAAA,6FAMxBsD,GAAWxD,GAAAA,EAAAA,IAAUyD,IAAAA,GAAAvD,EAAAA,GAAAA,GAAA,0GAMrBwD,GAAiB1D,GAAAA,EAAAA,EAAQ2D,IAAAA,GAAAzD,EAAAA,GAAAA,GAAA,+B,UCtFzB0D,GAAW,SAAHzD,GAAwB,IAAlB0D,EAAI1D,EAAJ0D,KAAMC,EAAI3D,EAAJ2D,KAC/B,OACEC,EAAAA,GAAAA,MAACnB,GAAU,CAAArB,SAAA,EACTM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAM,IAAAC,OAAOL,QAE/BhC,EAAAA,GAAAA,KAAC6B,GAAc,CAAAnC,SAAEuC,MAGvB,E,WCVaK,GAAanE,GAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,uFAMvBkE,GAAepE,GAAAA,EAAAA,IAAUiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,QACzBmE,GAAiBrE,GAAAA,EAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,wGAO3BoE,GAAetE,GAAAA,EAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,GAAAA,GAAA,qEAKzBqE,GAAYvE,GAAAA,EAAAA,EAAQuC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,kCAGpBsE,GAAUxE,GAAAA,EAAAA,GAASyC,IAAAA,GAAAvC,EAAAA,GAAAA,GAAA,0GAMnBuE,GAAUzE,GAAAA,EAAAA,GAAS2C,IAAAA,GAAAzC,EAAAA,GAAAA,GAAA,mCAGnBwE,GAAU1E,GAAAA,EAAAA,EAAQ6C,IAAAA,GAAA3C,EAAAA,GAAAA,GAAA,uVACpB,SAAAC,GAAS,OAAAA,EAANwE,OAAuB,UAAY,OAAO,IASzC,SAAAtE,GAAS,OAAAA,EAANsE,OAAuB,KAAO,MAAM,IAEzC,SAAApE,GAAS,OAAAA,EAANoE,OAAuB,OAAS,GAAG,IAStCC,GAAa5E,GAAAA,EAAAA,GAAS+C,IAAAA,GAAA7C,EAAAA,GAAAA,GAAA,0EAKtB2E,GAAgB7E,GAAAA,EAAAA,EAAQiD,IAAAA,GAAA/C,EAAAA,GAAAA,GAAA,kCAGxB4E,GAAa9E,GAAAA,EAAAA,EAAQmD,IAAAA,GAAAjD,EAAAA,GAAAA,GAAA,2EAKrB6E,GAAW/E,GAAAA,EAAAA,OAAaqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,6D,sBClExB8E,GAAehF,GAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,kFAMxB+E,GAAcjF,GAAAA,EAAAA,GAASiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,iLAUvBgF,GAAkBlF,GAAAA,EAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,+DAI5BiF,GAAiBnF,GAAAA,EAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,GAAAA,GAAA,2BAG3BkF,GAAcpF,GAAAA,EAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,QAExBmF,GAAYrF,GAAAA,EAAAA,GAASyC,IAAAA,GAAAvC,EAAAA,GAAAA,GAAA,0IAQrBoF,IADctF,GAAAA,EAAAA,GAAS2C,IAAAA,GAAAzC,EAAAA,GAAAA,GAAA,QAChBF,GAAAA,EAAAA,IAAU6C,IAAAA,GAAA3C,EAAAA,GAAAA,GAAA,iCAIjBsC,GAAOxC,GAAAA,EAAAA,IAAU+C,IAAAA,GAAA7C,EAAAA,GAAAA,GAAA,gCAIjBqF,GAAYvF,GAAAA,EAAAA,IAAUiD,IAAAA,GAAA/C,EAAAA,GAAAA,GAAA,mDCxCtB6B,GAAO,SAAH5B,GAAmC,IAA7B0D,EAAI1D,EAAJ0D,KAAMC,EAAI3D,EAAJ2D,KAAM0B,EAASrF,EAATqF,UACjC,OACEzB,EAAAA,GAAAA,MAACkB,GAAW,CAAA1D,SAAA,EACVM,EAAAA,GAAAA,KAACyD,GAAI,CAAA/D,SAAEsC,KACPhC,EAAAA,GAAAA,KAACW,GAAI,CAAAjB,SAAEuC,KACPjC,EAAAA,GAAAA,KAAC0D,GAAS,CAAAhE,SACPiE,EAAUC,OAAO,GAAGC,cAAgBF,EAAUG,MAAM,OAI7D,E,WCVajD,IADc1C,GAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,QACTF,GAAAA,EAAAA,IAAUiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,sEAKxB0F,GAAM5F,GAAAA,EAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,sFAKhB2F,GAAQ7F,GAAAA,EAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,GAAAA,GAAA,mDAIlB4F,GAAQ9F,GAAAA,EAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,0F,WCZlB6F,GAAiB,SAAH5F,GAAgB,IAAV6F,EAAE7F,EAAF6F,GAGzBC,GAFOC,EAAAA,GAAAA,IAAYC,GAAAA,IAECC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQN,CAAE,IAEtD,OAAKC,GAIHlC,EAAAA,GAAAA,MAACrB,GAAW,CAAAnB,SAAA,EACVwC,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,UACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SACH0E,EAAaM,KAAKd,OAAO,GAAGC,cAC3BO,EAAaM,KAAKZ,MAAM,SAG9B5B,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,YACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SAAE0E,EAAaO,aAEvBzC,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,WACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SAAE0E,EAAavF,YAEvBqD,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,YACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SAAE0E,EAAarF,aAEvBmD,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,UACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SAAE0E,EAAaQ,WAEvB1C,EAAAA,GAAAA,MAAC6B,GAAG,CAAArE,SAAA,EACFM,EAAAA,GAAAA,KAACgE,GAAK,CAAAtE,SAAC,iBACPM,EAAAA,GAAAA,KAACiE,GAAK,CAAAvE,SAAE0E,EAAaS,qBA7BlB7E,EAAAA,GAAAA,KAAA,OAAAN,SAAK,qBAiChB,E,WCpCaoF,GAAY3G,GAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,4GAOxB0G,IAAQ5G,EAAAA,GAAAA,GAAO6G,GAAAA,GAAP7G,CAAmBiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,wQAa3B4G,IAAe9G,EAAAA,GAAAA,GAAO6G,GAAAA,GAAP7G,CAAmBmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,yQAalC6G,IAAe/G,EAAAA,GAAAA,GAAOgH,GAAAA,GAAPhH,CAAmBqC,IAAAA,GAAAnC,EAAAA,GAAAA,GAAA,6CAIlC+G,IAAOjH,EAAAA,GAAAA,GAAOkH,GAAAA,GAAPlH,CAAkBuC,IAAAA,GAAArC,EAAAA,GAAAA,GAAA,mMAWzBiH,GAAYnH,GAAAA,EAAAA,GAASyC,IAAAA,GAAAvC,EAAAA,GAAAA,GAAA,8FAMrBkH,GAAWpH,GAAAA,EAAAA,EAAQ2C,IAAAA,GAAAzC,EAAAA,GAAAA,GAAA,+F,iCC/C1BmH,GAAaC,GAAAA,KAAaC,MAAM,CACpCC,KAAMF,GAAAA,KAAaG,SAAS,oBAC5BC,MAAOJ,GAAAA,KAAaG,SAAS,qBAC7BE,KAAML,GAAAA,KAAaG,SAAS,oBAC5BG,QAASN,GAAAA,OAGEO,GAAQ,WAMnB,OACEhG,EAAAA,GAAAA,KAACiG,GAAAA,GAAM,CACLC,cAAe,CACbP,KAAM,GACNE,MAAO,GACPC,KAAM,GACNC,QAAS,IAEXI,iBAAkBX,GAClBY,SAdiB,SAAAC,GACnBC,KAAAA,OAAAA,QAAwB,2BACxBD,EAAOE,WACT,EAW2B7G,UAEvBwC,EAAAA,GAAAA,MAACkD,GAAI,CAAA1F,SAAA,EACHM,EAAAA,GAAAA,KAACsF,GAAS,CAAA5F,SAAC,6BACXM,EAAAA,GAAAA,KAACuF,GAAQ,CAAA7F,SAAC,sDACVwC,EAAAA,GAAAA,MAAC4C,GAAS,CAAApF,SAAA,EACRM,EAAAA,GAAAA,KAAC+E,GAAK,CACJY,KAAK,OACLlG,KAAK,OACL+G,YAAY,QACZC,QAAQ,8HAEVzG,EAAAA,GAAAA,KAACkF,GAAY,CAACS,KAAK,OAAOe,UAAU,aAGtCxE,EAAAA,GAAAA,MAAC4C,GAAS,CAAApF,SAAA,EACRM,EAAAA,GAAAA,KAAC+E,GAAK,CACJY,KAAK,QACLlG,KAAK,OACL+G,YAAY,QACZC,QAAQ,8CAEVzG,EAAAA,GAAAA,KAACkF,GAAY,CAACS,KAAK,QAAQe,UAAU,aAEvCxE,EAAAA,GAAAA,MAAC4C,GAAS,CAAApF,SAAA,EACRM,EAAAA,GAAAA,KAAC+E,GAAK,CACJY,KAAK,OACLlG,KAAK,SACL+G,YAAY,eACZC,QAAQ,wEAEVzG,EAAAA,GAAAA,KAACkF,GAAY,CAACS,KAAK,OAAOe,UAAU,aAEtC1G,EAAAA,GAAAA,KAAC8E,GAAS,CAAApF,UACRM,EAAAA,GAAAA,KAACiF,GAAY,CAACU,KAAK,UAAUlG,KAAK,OAAO+G,YAAY,eAEvDxG,EAAAA,GAAAA,KAACV,GAAAA,EAAY,CACXG,KAAK,SACLkH,MAAO,CACLC,UAAW,OACXC,WAAY,QACZnH,SACH,aAMT,ECxEaoH,GAAW,SAAHxI,GAAyB,IAAnB6F,EAAE7F,EAAF6F,GAAI4C,EAAOzI,EAAPyI,QACvBC,EAAe,SAAAC,GACnB,OAAQA,GACN,IAAK,iBACH,OACEjH,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,4BAI/B,IAAK,WAoCL,IAAK,SACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,mBAjC/B,IAAK,UACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,oBAG/B,IAAK,OACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,gBAG/B,IAAK,KACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,eAG/B,IAAK,KACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,eAG/B,IAAK,QACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,kBAS/B,IAAK,SACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,mBAG/B,IAAK,UACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,oBAG/B,IAAK,MACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,gBAG/B,IAAK,YACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,sBAG/B,IAAK,MACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,gBAG/B,IAAK,QACH,OACEpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,kBAI/B,QACE,OAAO,KAEb,EACA,OACEF,EAAAA,GAAAA,MAACmB,GAAe,CAAA3D,SAAA,EACdwC,EAAAA,GAAAA,MAACoB,GAAc,CAAA5D,SAAA,EACbM,EAAAA,GAAAA,KAACmD,GAAY,CAAAzD,SACVqH,GACCG,OAAOC,QAAQJ,GAASK,KAAI,SAAA5I,GAAmB,IAADE,GAAA2I,EAAAA,GAAAA,GAAA7I,EAAA,GAAhByI,EAAGvI,EAAA,GAAE4I,EAAK5I,EAAA,GACtC,OAAc,IAAV4I,IAAyB,IAAVA,GAEftH,EAAAA,GAAAA,KAACE,GAAI,CAEH8B,KAAMgF,EAAaC,GACnBhF,KAAMqF,EACN3D,UAAWsD,GAHNA,GAOJ,IACT,OAEJjH,EAAAA,GAAAA,KAACwD,GAAS,CAAA9D,SAAC,qBACXM,EAAAA,GAAAA,KAACkE,GAAc,CAACC,GAAIA,QAEtBnE,EAAAA,GAAAA,KAACuD,GAAW,CAAA7D,UACVM,EAAAA,GAAAA,KAACgG,GAAK,QAId,ECnIauB,GAAyBpJ,GAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,+DAInCmJ,GAAmBrJ,GAAAA,EAAAA,IAAUiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,6FAM7BoJ,GAAatJ,GAAAA,EAAAA,IAAUmC,KAAAA,IAAAjC,EAAAA,GAAAA,GAAA,QACvBqJ,GAAWvJ,GAAAA,EAAAA,EAAQqC,KAAAA,IAAAnC,EAAAA,GAAAA,GAAA,mDAKnBsJ,IADaxJ,GAAAA,EAAAA,EAAQuC,KAAAA,IAAArC,EAAAA,GAAAA,GAAA,QACPF,GAAAA,EAAAA,EAAQyC,KAAAA,IAAAvC,EAAAA,GAAAA,GAAA,S,WCLtBuJ,GAAU,SAAHtJ,GAAqB,IAAfuJ,EAAOvJ,EAAPuJ,QAClBC,EAAiB,SAAAC,GAErB,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,GAAK,EAAGA,IAClBA,GAAKF,EACPC,EAAME,KAAK,eAAD7F,OAAgB4F,IAE1BD,EAAME,KAAK,sBAAD7F,OAAuB4F,IAGrC,OAAOD,CACT,EAEA,OACE9F,EAAAA,GAAAA,MAACqF,GAAsB,CAAA7H,SAAA,EACrBM,EAAAA,GAAAA,KAACwH,GAAgB,CAAA9H,SACdmI,EAAQT,KAAI,SAAC5C,EAAM2D,GAAK,OACvBjG,EAAAA,GAAAA,MAACuF,GAAU,CAAA/H,SAAA,EACTM,EAAAA,GAAAA,KAACoI,GAAAA,EAAM,CAAA1I,SAAE8E,EAAK6D,cAAczE,OAAO,GAAGC,iBACtC7D,EAAAA,GAAAA,KAAC0H,GAAQ,CAAAhI,SAAE8E,EAAK6D,gBAEfP,EAAetD,EAAK8D,iBAAiBlB,KAAI,SAACpF,EAAMmG,GAAK,OACpDnI,EAAAA,GAAAA,KAAA,OAAiBnB,MAAM,OAAOE,OAAO,OAAMW,UACzCM,EAAAA,GAAAA,KAAA,OAAKmC,UAAS,GAAAE,OAAKD,GAAAA,EAAM,KAAAC,OAAIL,MADrBmG,EAEJ,KAGRjG,EAAAA,GAAAA,MAACyF,GAAW,CAAAjI,SAAA,CAAC,IAAE8E,EAAKuB,aAVLoC,EAWJ,OAGjBnI,EAAAA,GAAAA,KAACuD,GAAW,CAAA7D,UACVM,EAAAA,GAAAA,KAACgG,GAAK,QAId,EC5BAuC,KAAAA,cAAoB,SACpB,IAAMC,GAAe,CACnBC,QAAS,CACPC,SAAU,QACV7J,MAAO,QACPE,OAAQ,QACR4J,OAAQ,OACRpK,gBAAiB,qBACjBqK,SAAU,eAEZC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGFC,GAAc,SAAH9K,GAAmC,IAA7B+K,EAAM/K,EAAN+K,OAAQC,EAAOhL,EAAPgL,QAASC,EAAIjL,EAAJiL,KAC7CC,GAAkCC,EAAAA,GAAAA,UAAS,YAAWC,GAAArC,EAAAA,GAAAA,GAAAmC,EAAA,GAA/CG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GACEJ,EAAAA,GAAAA,WAAS,GAAMK,GAAAzC,EAAAA,GAAAA,GAAAwC,EAAA,GADVE,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GAGtDG,EAAkB,SAAAC,GACtBN,EAAaM,IAAQP,EAAY,KAAOO,GACxCF,EAAoC,aAARE,EAC9B,EAMA,OACElK,EAAAA,GAAAA,KAAAmK,GAAAA,SAAA,CAAAzK,SACG2J,IACCrJ,EAAAA,GAAAA,KAACuI,KAAK,CAACc,OAAQA,EAAQe,eAAgBd,EAAS3C,MAAO6B,GAAa9I,UAClEM,EAAAA,GAAAA,KAACsC,GAAU,CAAC/C,QATG,SAAA8K,GACjBA,EAAMC,SAAWD,EAAME,eACzBjB,GAEJ,EAK4C5J,UAClCwC,EAAAA,GAAAA,MAACK,GAAY,CAAA7C,SAAA,EACXwC,EAAAA,GAAAA,MAAA,OAAAxC,SAAA,EACEwC,EAAAA,GAAAA,MAACX,GAAQ,CAAA7B,SAAA,EACPM,EAAAA,GAAAA,KAAC+C,GAAU,CAAArD,SAAE6J,EAAK5D,QAClB3F,EAAAA,GAAAA,KAACkD,GAAQ,CAAC3D,QAAS+J,EAAQ5J,UACzBM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,wBAI/BF,EAAAA,GAAAA,MAACf,GAAY,CAAAzB,SAAA,EACXwC,EAAAA,GAAAA,MAAC3B,GAAM,CAAAb,SAAA,EACLM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,mBAE1BmH,EAAKxB,OAAO,KAAGwB,EAAK1B,QAAQlD,OAAO,gBAEtCzC,EAAAA,GAAAA,MAACc,GAAa,CAAAtD,SAAA,EACZM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,oBACpB,IACNmH,EAAKiB,gBAGVtI,EAAAA,GAAAA,MAACe,GAAU,CAAAvD,SAAA,CAAC,SAAE6J,EAAKkB,MAAM,UACzBzK,EAAAA,GAAAA,KAACwC,GAAc,CAAA9C,SACZ6J,EAAKmB,QAAQtD,KAAI,SAACzB,EAAMwC,GAAK,OAC5BnI,EAAAA,GAAAA,KAACyC,GAAY,CAEXkI,IAAKhF,EACLiF,IAAG,SAAAvI,OAAW8F,EAAQ,IAFjBA,EAGL,OAGNnI,EAAAA,GAAAA,KAAC0C,GAAS,CAAAhD,SAAE6J,EAAKsB,kBAEnB3I,EAAAA,GAAAA,MAACS,GAAO,CAAAjD,SAAA,EACNM,EAAAA,GAAAA,KAAC4C,GAAO,CAAAlD,UACNM,EAAAA,GAAAA,KAAC6C,GAAO,CACNtD,QAAS,kBAAM0K,EAAgB,WAAW,EAC1CnH,OAAsB,aAAd6G,EACRmB,UAAyB,aAAdnB,EAA2B,SAAW,GAAGjK,SACrD,gBAIHM,EAAAA,GAAAA,KAAC4C,GAAO,CAAAlD,UACNM,EAAAA,GAAAA,KAAC6C,GAAO,CACNtD,QAAS,WACP0K,EAAgB,UAClB,EACAnH,OAAsB,YAAd6G,EACRmB,UAAyB,YAAdnB,EAA0B,SAAW,GAAGjK,SACpD,iBAKJqK,IACC/J,EAAAA,GAAAA,KAAC8G,GAAQ,CAAC3C,GAAIoF,EAAK9E,IAAKsC,QAASwC,EAAKxC,UAEzB,YAAd4C,IAA2B3J,EAAAA,GAAAA,KAAC4H,GAAO,CAACC,QAAS0B,EAAK1B,kBAOjE,E,WCpGAU,KAAAA,cAAoB,UAEb,IAAMwC,GAAO,SAAHzM,GAUV,IATLmG,EAAGnG,EAAHmG,IACAkB,EAAIrH,EAAJqH,KACA8E,EAAKnM,EAALmM,MACA1C,EAAMzJ,EAANyJ,OACAyC,EAAQlM,EAARkM,SACAK,EAAWvM,EAAXuM,YACAH,EAAOpM,EAAPoM,QACA7C,EAAOvJ,EAAPuJ,QACAd,EAAOzI,EAAPyI,QAEMiE,GAAW3G,EAAAA,GAAAA,IAAY4G,GAAAA,IACvBC,GAAWC,EAAAA,GAAAA,MACXC,EAAaJ,EAASzG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQA,CAAG,IACzD+E,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAArC,EAAAA,GAAAA,GAAAmC,EAAA,GAA9C6B,EAAW3B,EAAA,GAAE4B,EAAc5B,EAAA,GA8ClC,OACExH,EAAAA,GAAAA,MAAChC,GAAI,CAAAR,SAAA,EACHwC,EAAAA,GAAAA,MAACT,GAAW,CAAA/B,SAAA,EACVM,EAAAA,GAAAA,KAACiB,GAAG,CAAC0J,IAAKD,EAAQ,GAAIE,IAAKjF,KAE3BzD,EAAAA,GAAAA,MAACb,GAAS,CAAA3B,SAAA,EACRwC,EAAAA,GAAAA,MAACX,GAAQ,CAAA7B,SAAA,EACPM,EAAAA,GAAAA,KAACG,GAAK,CAAAT,SAAEiG,KACRzD,EAAAA,GAAAA,MAAC7B,GAAK,CAAAX,SAAA,CAAC,SAAE+K,EAAM,UACfzK,EAAAA,GAAAA,KAACV,GAAAA,EAAY,CACXqH,MAAO,CACL9H,MAAO,OACPE,OAAQ,OACRR,gBAAiB,eAEnBgB,QApDiB,WAEvB2L,EADJE,GAEMG,EAAAA,GAAAA,IAAe,CACb9G,IAAAA,EACAkB,KAAAA,EACA8E,MAAAA,EACA1C,OAAAA,EACAyC,SAAAA,EACAK,YAAAA,EACAH,QAAAA,EACA7C,QAAAA,EACAd,QAAAA,KAIFyE,EAAAA,GAAAA,IAAY,CACV/G,IAAAA,EACAkB,KAAAA,EACA8E,MAAAA,EACA1C,OAAAA,EACAyC,SAAAA,EACAK,YAAAA,EACAH,QAAAA,EACA7C,QAAAA,EACAd,QAAAA,IAGV,EAyBYtH,KAAK,SAAQC,SAEZ0L,GACCpL,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,wBAG3BpC,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,wBAMjCF,EAAAA,GAAAA,MAACf,GAAY,CAAAzB,SAAA,EACXwC,EAAAA,GAAAA,MAAC3B,GAAM,CAAAb,SAAA,EACLM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,mBAE1B2F,EAAO,KAAGF,EAAQlD,OAAO,gBAE5BzC,EAAAA,GAAAA,MAACzB,GAAQ,CAAAf,SAAA,EACPM,EAAAA,GAAAA,KAAA,OAAKnB,MAAM,OAAOE,OAAO,OAAMW,UAC7BM,EAAAA,GAAAA,KAAA,OAAKmC,UAAWC,GAAAA,EAAS,oBAE1BoI,SAGLtI,EAAAA,GAAAA,MAACvB,GAAI,CAAAjB,SAAA,CAAEmL,EAAY,WACnB3I,EAAAA,GAAAA,MAACP,GAAQ,CAAAjC,SAAA,EACPM,EAAAA,GAAAA,KAACa,GAAW,CAAAnB,SAtDL,CACf,CAAEsC,KAAM,cAAeC,KAAM,YAC7B,CAAED,KAAM,cAAeC,KAAM,aAC7B,CAAED,KAAM,cAAeC,KAAM,UAC7B,CAAED,KAAM,eAAgBC,KAAM,WAC9B,CAAED,KAAM,WAAYC,KAAM,UAC1B,CAAED,KAAM,OAAQC,KAAM,OAiDFmF,KAAI,SAAC5C,EAAM2D,GAAK,OACxBnI,EAAAA,GAAAA,KAAC+B,GAAQ,CAAaC,KAAMwC,EAAKxC,KAAMC,KAAMuC,EAAKvC,MAAnCkG,EAA2C,OAG9DnI,EAAAA,GAAAA,KAACV,GAAAA,EAAY,CACXC,QAhGW,WACrB+L,GAAe,EACjB,EA+FY7L,KAAK,SACLN,qBAAqB,UAASO,SAC/B,wBAMPM,EAAAA,GAAAA,KAACoJ,GAAW,CACVC,OAAQgC,EACR/B,QAvGmB,WACvBgC,GAAe,EACjB,EAsGM/B,KAAM,CACJ9E,IAAAA,EACAkB,KAAAA,EACA8E,MAAAA,EACA1C,OAAAA,EACAyC,SAAAA,EACA3C,QAAAA,EACA6C,QAAAA,EACAG,YAAAA,EACA9D,QAAAA,OAKV,C,sNCrKa0E,EAAc,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,KAAM,EAC3CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,QAAQG,SAAU,EACnDxH,EAAgB,SAAAoH,GAAK,OAAIA,EAAMC,QAAQA,OAAQ,EAC/CI,EAAgB,SAAAL,GAAK,OAAIA,EAAMC,QAAQK,OAAQ,EAC/Cf,EAAwB,SAAAS,GAAK,OAAIA,EAAMC,QAAQX,QAAS,EAExDiB,GAAyBC,EAAAA,EAAAA,IACpC,CAACH,IACD,SAAAC,GAAO,OAAIA,EAAQxB,QAAQ,IAGhB2B,GAAwBD,EAAAA,EAAAA,IACnC,CAACH,IACD,SAAAC,GAAO,OAAIA,EAAQI,SAAS,IAGjBC,GAA0BH,EAAAA,EAAAA,IACrC,CAACH,IACD,SAAAC,GAAO,OAAIA,EAAQM,WAAW,KAGKJ,EAAAA,EAAAA,IACnC,CACE5H,EACA2H,EACAE,EACAE,IAEF,SAACV,EAASnB,EAAU4B,EAAWE,GAC7B,OAAOX,EAAQY,QAAO,SAAAC,GACpB,IAAMC,GACHjC,GACDgC,EAAOhC,SAASkC,cAAcC,SAASnC,EAASkC,eAE5CE,GACHR,GACqB,kBAAdA,GACNI,EAAOzF,QAAQqF,EAAUM,eAEvBG,GACHP,GACAQ,MAAMC,QAAQT,IACbA,EAAYK,SAASH,EAAO9H,KAAKgI,eAErC,OAAOD,GAAiBG,GAAkBC,CAC5C,GACF,G","sources":["components/Button/Buttons.styled.js","components/Button/Button.js","components/Card/Card.styled.js","components/Card/ListItem.js","components/Modal/ModalWindow.styled.js","components/Features/Features.styled.js","components/Features/Item.js","components/VehicleDetails/VehicleDetails.styled.js","components/VehicleDetails/VehicleDetails.js","components/Forma/Forma.styled.js","components/Forma/Forma.js","components/Features/Features.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/Modal/ModalWindow.js","components/Card/Card.js","redux/cards/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border-radius: 200px;\n\n  background-color: ${({ backgroundColor }) => backgroundColor || '#E44848'};\n  color: ${({ textColor }) => textColor || '#F2F4F7'};\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  width: ${({ width }) => width || '166px'};\n  height: ${({ height }) => height || '56px'};\n  border: ${({ border }) => border || '1px solid rgba(71, 84, 103, 0.2)'};\n\n  transition: background-color 0.3s, border-color 0.3s;\n  &:hover {\n    background-color: ${({ hoverBackgroundColor }) =>\n      hoverBackgroundColor || '#d84343'};\n    border-color: ${({ hoverBorderColor }) => hoverBorderColor || '#E44848'};\n  }\n`;\n","import { Button } from './Buttons.styled';\n\nexport const CustomButton = ({\n  onClick,\n  variant,\n  type,\n  children,\n  hoverBorderColor,\n  border,\n  color,\n  borderColor,\n  ...props\n}) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant={variant}\n      type={type}\n      hoverBorderColor={hoverBorderColor}\n      border={border}\n      color={color}\n      borderColor={borderColor}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 20px;\n  padding: 24px;\n  margin: 0;\n  box-sizing: border-box;\n  max-width: 888px;\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 700px;\n  // }\n\n  // @media screen and (min-width: 1440px) {\n  //   max-width: 888px;\n  // }\n`;\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Price = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Rating = styled.p`\n  display: inline;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-decoration: underline;\n`;\nexport const Location = styled.p`\n  display: inline;\n`;\nexport const Text = styled.p`\n  margin-bottom: 24px;\n  font-size: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\nexport const ListDetails = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const DetailItem = styled.li`\n  background-color: #f2f4f7;\n  border-radius: 100px;\n  padding: 12px 18px;\n  display: flex;\n\n  text-align: center;\n`;\nexport const Img = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n  width: 290px;\n`;\nexport const LocationWrap = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const Container = styled.div`\n  width: 526px;\n  height: 310px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nexport const ItemWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ListWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  // justify-content: space-around;\n`;\nexport const TextDetailItem = styled.p`\n  margin-left: 8px;\n`;\n","import sprite from '../sprite.svg';\nimport { DetailItem, TextDetailItem } from './Card.styled';\n\nexport const ListItem = ({ icon, text }) => {\n  return (\n    <DetailItem>\n      <svg width=\"20px\" height=\"20px\">\n        <use xlinkHref={sprite + `#${icon}`} />\n      </svg>\n      <TextDetailItem>{text}</TextDetailItem>\n    </DetailItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const WrappModal = styled.div`\n  border-radius: 20px;\n  padding: 40px;\n  width: 982px;\n  height: 720px;\n`;\nexport const ContentModal = styled.div``;\nexport const GalleryWrapper = styled.div`\n  width: 902px;\n  // height: 310px;\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const ImageGallery = styled.img`\n  border-radius: 10px;\n  width: 290px;\n  height: 310px;\n`;\nexport const TextModal = styled.p`\n  margin-bottom: 44px;\n`;\nexport const ListAdd = styled.ul`\n  display: flex;\n  gap: 40px;\n  // margin-bottom: 24px;\n  border-bottom: 1px solid #e7e9fc;\n`;\nexport const ItemAdd = styled.li`\n  padding-bottom: 24px;\n`;\nexport const LinkAdd = styled.a`\n  color: ${({ active }) => (active ? '#E44848' : 'black')};\n  position: relative;\n  font-weight: 600;\n  font-size: 20px;\n  padding-bottom: 24px;\n  &:hover {\n    color: #e44848;\n  }\n  &::after {\n    content: ${({ active }) => (active ? '\"\"' : 'none')};\n    position: absolute;\n    width: ${({ active }) => (active ? '100%' : '0')};\n\n    height: 4px;\n    left: 0;\n    bottom: -1px;\n    background-color: #e44848;\n    border-radius: 2px;\n  }\n`;\nexport const TitleModal = styled.h2`\n  margin-bottom: 8px;\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const LocationModal = styled.p`\n  margin-bottom: 16px;\n`;\nexport const PriceModal = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 24px;\n`;\nexport const BtnClose = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n","import styled from '@emotion/styled';\nexport const ListFeatures = styled.ul`\n  margin-top: 44px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const ItemFeature = styled.li`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 100px;\n  padding: 12px 18px;\n  background: #f2f4f7;\n  display: flex;\n  gap: 8px;\n`;\nexport const FeaturesWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DetailsWrapper = styled.div`\n  width: 430px;\n`;\nexport const FormWrapper = styled.div``;\n\nexport const TitleText = styled.h2`\n  font-weight: 600;\n  border-bottom: 1px solid #e7e9fc;\n  margin-top: 44px;\n  margin-bottom: 44px;\n  padding-bottom: 24px;\n`;\nexport const ListDetails = styled.ul``;\nexport const Icon = styled.div`\n  margin-right: 8px;\n`;\n\nexport const Text = styled.div`\n  margin-right: 2px;\n`;\n\nexport const CustomKey = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { CustomKey, Icon, ItemFeature, Text } from './Features.styled';\n\nexport const Item = ({ icon, text, castomKey }) => {\n  return (\n    <ItemFeature>\n      <Icon>{icon}</Icon>\n      <Text>{text}</Text>\n      <CustomKey>\n        {castomKey.charAt(0).toUpperCase() + castomKey.slice(1)}\n      </CustomKey>\n    </ItemFeature>\n  );\n};\n","import styled from '@emotion/styled';\nexport const ItemDetails = styled.li``;\nexport const ListDetails = styled.div`\n  gap: 14px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\nexport const Label = styled.div`\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const Value = styled.div`\n  flex-grow: 1;\n  text-align: right;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Label, ListDetails, Row, Value } from './VehicleDetails.styled';\nimport { selectCampers } from '../../redux/cards/selectors';\n\nexport const VehicleDetails = ({ id }) => {\n  const data = useSelector(selectCampers);\n\n  const selectedData = data.find(item => item._id === id);\n\n  if (!selectedData) {\n    return <div>No data available</div>;\n  }\n  return (\n    <ListDetails>\n      <Row>\n        <Label>Form</Label>\n        <Value>\n          {selectedData.form.charAt(0).toUpperCase() +\n            selectedData.form.slice(1)}\n        </Value>\n      </Row>\n      <Row>\n        <Label>Length</Label>\n        <Value>{selectedData.length}</Value>\n      </Row>\n      <Row>\n        <Label>Width</Label>\n        <Value>{selectedData.width}</Value>\n      </Row>\n      <Row>\n        <Label>Height</Label>\n        <Value>{selectedData.height}</Value>\n      </Row>\n      <Row>\n        <Label>Tank</Label>\n        <Value>{selectedData.tank}</Value>\n      </Row>\n      <Row>\n        <Label>Consumption</Label>\n        <Value>{selectedData.consumption}</Value>\n      </Row>\n    </ListDetails>\n  );\n};\n","import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const FormGroup = styled.label`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n  width: 400px;\n  align-self: center;\n`;\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 56px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const FieldComment = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 114px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 16px;\n  color: red;\n`;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 10px;\n  padding: 24px;\n  width: 448px;\n\n  margin-top: 44px;\n`;\nexport const FormTitle = styled.h2`\n  font-weight: 600;\n  font-size: 20px;\n  margin-top: 24px;\n  margin-left: 24px;\n`;\nexport const FormText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  margin-left: 24px;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormText,\n  FieldComment,\n} from './Forma.styled';\nimport * as Yup from 'yup';\nimport { FormTitle } from './Forma.styled';\nimport { CustomButton } from 'components/Button/Button';\nimport Notiflix from 'notiflix';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().required('Email is required'),\n  date: Yup.string().required('Date is required'),\n  comment: Yup.string(),\n});\n\nexport const Forma = () => {\n  const handleSubmit = action => {\n    Notiflix.Notify.success(`Your order is accepted.`);\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        date: '',\n        comment: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormTitle>Book your campervan now</FormTitle>\n        <FormText>Stay connected! We are always ready to help you.</FormText>\n        <FormGroup>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\" Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          <Field\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <Field\n            name=\"date\"\n            type=\"string\"\n            placeholder=\"Booking date\"\n            pattern=\"(0[1-9]|1[1,2])(\\/|-)(0[1-9]|[12][0-9]|3[01])(\\/|-)(19|20)\\d{2}\"\n          />\n          <ErrorMessage name=\"date\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <FieldComment name=\"comment\" type=\"text\" placeholder=\"Comment\" />\n        </FormGroup>\n        <CustomButton\n          type=\"submit\"\n          style={{\n            marginTop: '24px',\n            marginLeft: '24px',\n          }}\n        >\n          Send\n        </CustomButton>\n      </Form>\n    </Formik>\n  );\n};\n","import {\n  DetailsWrapper,\n  FeaturesWrapper,\n  FormWrapper,\n  ListFeatures,\n  TitleText,\n} from './Features.styled';\nimport sprite from '../sprite.svg';\nimport { Item } from './Item';\nimport { VehicleDetails } from 'components/VehicleDetails/VehicleDetails';\nimport { Forma } from 'components/Forma/Forma';\n\nexport const Features = ({ id, details }) => {\n  const getIconByKey = key => {\n    switch (key) {\n      case 'airConditioner':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-air-conditioner'} />\n          </svg>\n        );\n\n      case 'bathroom':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'kitchen':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-kitchen'} />\n          </svg>\n        );\n      case 'beds':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-bed'} />\n          </svg>\n        );\n      case 'TV':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-tv'} />\n          </svg>\n        );\n      case 'CD':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-cd'} />\n          </svg>\n        );\n      case 'radio':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-radio'} />\n          </svg>\n        );\n      case 'shower':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'toilet':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-toilet'} />\n          </svg>\n        );\n      case 'freezer':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-freezer'} />\n          </svg>\n        );\n      case 'hob':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-hob'} />\n          </svg>\n        );\n      case 'microwave':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-microwave'} />\n          </svg>\n        );\n      case 'gas':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-gas'} />\n          </svg>\n        );\n      case 'water':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-water'} />\n          </svg>\n        );\n\n      default:\n        return null; // Повертаємо null, якщо іконка не знайдена\n    }\n  };\n  return (\n    <FeaturesWrapper>\n      <DetailsWrapper>\n        <ListFeatures>\n          {details &&\n            Object.entries(details).map(([key, value]) => {\n              if (value !== 0 && value !== false) {\n                return (\n                  <Item\n                    key={key}\n                    icon={getIconByKey(key)}\n                    text={value}\n                    castomKey={key}\n                  />\n                );\n              }\n              return null;\n            })}\n        </ListFeatures>\n        <TitleText>Vehicle details</TitleText>\n        <VehicleDetails id={id} />\n      </DetailsWrapper>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </FeaturesWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nexport const CommonReviewsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ReviewsContainer = styled.div`\n  width: 430px;\n  margin-top: 44px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const UserReview = styled.div``;\nexport const UserName = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n`;\nexport const UserRating = styled.p``;\nexport const UserComment = styled.p``;\n","import sprite from '../sprite.svg';\nimport { FormWrapper } from 'components/Features/Features.styled';\nimport {\n  CommonReviewsContainer,\n  ReviewsContainer,\n  UserComment,\n  UserName,\n  UserReview,\n} from './Reviews.styled';\nimport { Forma } from 'components/Forma/Forma';\nimport { Avatar } from '@mui/material';\n\nexport const Reviews = ({ reviews }) => {\n  const getRatingStars = rating => {\n    let stars = [];\n    for (let i = 1; i <= 5; i++) {\n      if (i <= rating) {\n        stars.push(`icon-Rating-${i}`);\n      } else {\n        stars.push(`icon-Rating-nofill-${i}`);\n      }\n    }\n    return stars;\n  };\n\n  return (\n    <CommonReviewsContainer>\n      <ReviewsContainer>\n        {reviews.map((item, index) => (\n          <UserReview key={index}>\n            <Avatar>{item.reviewer_name.charAt(0).toUpperCase()}</Avatar>\n            <UserName>{item.reviewer_name}</UserName>\n\n            {getRatingStars(item.reviewer_rating).map((icon, index) => (\n              <svg key={index} width=\"16px\" height=\"16px\">\n                <use xlinkHref={`${sprite}#${icon}`} />\n              </svg>\n            ))}\n\n            <UserComment> {item.comment}</UserComment>\n          </UserReview>\n        ))}\n      </ReviewsContainer>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </CommonReviewsContainer>\n  );\n};\n","import { LocationWrap, Rating, TitleBox } from 'components/Card/Card.styled';\nimport {\n  ContentModal,\n  GalleryWrapper,\n  ImageGallery,\n  LinkAdd,\n  ListAdd,\n  TextModal,\n  WrappModal,\n  TitleModal,\n  LocationModal,\n  PriceModal,\n  ItemAdd,\n  BtnClose,\n} from './ModalWindow.styled';\nimport Modal from 'react-modal';\nimport sprite from '../sprite.svg';\nimport { useState } from 'react';\nimport { Features } from 'components/Features/Features';\nimport { Reviews } from 'components/Reviews/Reviews';\nModal.setAppElement('#root');\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    width: '100vw',\n    height: '100vh',\n    zIndex: '1200',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    overflow: 'aria-hidden',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nexport const ModalWindow = ({ isOpen, onClose, data }) => {\n  const [activeTab, setActiveTab] = useState('features');\n  const [isFeaturesContentVisible, setIsFeaturesContentVisible] =\n    useState(false);\n\n  const handleTabChange = tab => {\n    setActiveTab(tab === activeTab ? null : tab);\n    setIsFeaturesContentVisible(tab === 'features');\n  };\n  const closeOnWrapper = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return (\n    <>\n      {isOpen && (\n        <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n          <WrappModal onClick={closeOnWrapper}>\n            <ContentModal>\n              <div>\n                <TitleBox>\n                  <TitleModal>{data.name}</TitleModal>\n                  <BtnClose onClick={onClose}>\n                    <svg width=\"20px\" height=\"20px\">\n                      <use xlinkHref={sprite + '#icon-close'} />\n                    </svg>\n                  </BtnClose>\n                </TitleBox>\n                <LocationWrap>\n                  <Rating>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-Rating'} />\n                    </svg>\n                    {data.rating} ({data.reviews.length} Reviews)\n                  </Rating>\n                  <LocationModal>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-map-pin'} />\n                    </svg>{' '}\n                    {data.location}\n                  </LocationModal>\n                </LocationWrap>\n                <PriceModal>€{data.price},00</PriceModal>\n                <GalleryWrapper>\n                  {data.gallery.map((name, index) => (\n                    <ImageGallery\n                      key={index}\n                      src={name}\n                      alt={`Image ${index + 1}`}\n                    />\n                  ))}\n                </GalleryWrapper>\n                <TextModal>{data.description}</TextModal>\n              </div>\n              <ListAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => handleTabChange('features')}\n                    active={activeTab === 'features'}\n                    className={activeTab === 'features' ? 'active' : ''}\n                  >\n                    Features\n                  </LinkAdd>\n                </ItemAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => {\n                      handleTabChange('reviews');\n                    }}\n                    active={activeTab === 'reviews'}\n                    className={activeTab === 'reviews' ? 'active' : ''}\n                  >\n                    Reviews\n                  </LinkAdd>\n                </ItemAdd>\n              </ListAdd>\n              {isFeaturesContentVisible && (\n                <Features id={data._id} details={data.details} />\n              )}\n              {activeTab === 'reviews' && <Reviews reviews={data.reviews} />}\n            </ContentModal>\n          </WrappModal>\n        </Modal>\n      )}\n    </>\n  );\n};\n","import sprite from '../sprite.svg';\nimport { CustomButton } from 'components/Button/Button';\n\nimport {\n  Title,\n  Price,\n  Rating,\n  Location,\n  Text,\n  Item,\n  Img,\n  Container,\n  TitleBox,\n  ItemWrapper,\n  LocationWrap,\n  ListDetails,\n  ListWrap,\n} from './Card.styled';\nimport { ListItem } from './ListItem';\nimport { useState } from 'react';\n\nimport { ModalWindow } from 'components/Modal/ModalWindow';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFavoriteCampers } from '../../redux/cards/selectors';\nimport { addFavorite, deleteFavorite } from '../../redux/cards/campersSlice';\nModal.setAppElement('#modal');\n\nexport const Card = ({\n  _id,\n  name,\n  price,\n  rating,\n  location,\n  description,\n  gallery,\n  reviews,\n  details,\n}) => {\n  const favorite = useSelector(selectFavoriteCampers);\n  const dispatch = useDispatch();\n  const isFavorite = favorite.find(item => item._id === _id);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleShowMore = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleFavoriteToggle = () => {\n    isFavorite\n      ? dispatch(\n          deleteFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            details,\n          })\n        )\n      : dispatch(\n          addFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            details,\n          })\n        );\n  };\n  const iconData = [\n    { icon: 'icon-adults', text: '3 adults' },\n    { icon: 'automatic-1', text: 'Automatic' },\n    { icon: 'icon-petrol', text: 'Petrol' },\n    { icon: 'icon-kitchen', text: 'Kitchen' },\n    { icon: 'icon-bed', text: '2 beds' },\n    { icon: 'ac-1', text: 'AC' },\n  ];\n  return (\n    <Item>\n      <ItemWrapper>\n        <Img src={gallery[0]} alt={name} />\n\n        <Container>\n          <TitleBox>\n            <Title>{name}</Title>\n            <Price>€{price},00</Price>\n            <CustomButton\n              style={{\n                width: '16px',\n                height: '16px',\n                backgroundColor: 'transparent',\n              }}\n              onClick={handleFavoriteToggle}\n              type=\"button\"\n            >\n              {isFavorite ? (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart-fill'} />\n                </svg>\n              ) : (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart'} />\n                </svg>\n              )}\n            </CustomButton>\n          </TitleBox>\n\n          <LocationWrap>\n            <Rating>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-Rating'} />\n              </svg>\n              {rating} ({reviews.length} Reviews)\n            </Rating>\n            <Location>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-map-pin'} />\n              </svg>\n              {location}\n            </Location>\n          </LocationWrap>\n          <Text>{description} ...</Text>\n          <ListWrap>\n            <ListDetails>\n              {iconData.map((item, index) => (\n                <ListItem key={index} icon={item.icon} text={item.text} />\n              ))}\n            </ListDetails>\n            <CustomButton\n              onClick={handleShowMore}\n              type=\"button\"\n              hoverBackgroundColor=\"#d84343\"\n            >\n              Show More\n            </CustomButton>\n          </ListWrap>\n        </Container>\n      </ItemWrapper>\n      <ModalWindow\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        data={{\n          _id,\n          name,\n          price,\n          rating,\n          location,\n          reviews,\n          gallery,\n          description,\n          details,\n        }}\n      ></ModalWindow>\n    </Item>\n  );\n};\n","import { createSelector } from 'reselect';\nexport const selectError = state => state.campers.error;\nexport const selectIsLoading = state => state.campers.isLoading;\nexport const selectCampers = state => state.campers.campers;\nexport const selectFilters = state => state.campers.filters;\nexport const selectFavoriteCampers = state => state.campers.favorite;\n\nexport const selectFilteredLocation = createSelector(\n  [selectFilters],\n  filters => filters.location\n);\n\nexport const selectEquipmentFilter = createSelector(\n  [selectFilters],\n  filters => filters.equipment\n);\n\nexport const selectVehicleTypeFilter = createSelector(\n  [selectFilters],\n  filters => filters.vehicleType\n);\n\nexport const selectFilteredCampers = createSelector(\n  [\n    selectCampers,\n    selectFilteredLocation,\n    selectEquipmentFilter,\n    selectVehicleTypeFilter,\n  ],\n  (campers, location, equipment, vehicleType) => {\n    return campers.filter(camper => {\n      const locationMatch =\n        !location ||\n        camper.location.toLowerCase().includes(location.toLowerCase());\n\n      const equipmentMatch =\n        !equipment ||\n        (typeof equipment === 'string' &&\n          camper.details[equipment.toLowerCase()]);\n\n      const vehicleTypeMatch =\n        !vehicleType ||\n        (Array.isArray(vehicleType) &&\n          vehicleType.includes(camper.form.toLowerCase()));\n\n      return locationMatch && equipmentMatch && vehicleTypeMatch;\n    });\n  }\n);\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","_ref","backgroundColor","_ref2","textColor","_ref3","fontSize","_ref4","width","_ref5","height","_ref6","border","_ref7","hoverBackgroundColor","_ref8","hoverBorderColor","CustomButton","onClick","variant","type","children","color","borderColor","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Item","Title","_templateObject2","Price","_templateObject3","Rating","_templateObject4","Location","_templateObject5","Text","_templateObject6","ListDetails","_templateObject7","DetailItem","_templateObject8","Img","_templateObject9","LocationWrap","_templateObject10","Container","_templateObject11","TitleBox","_templateObject12","ItemWrapper","_templateObject13","ListWrap","_templateObject14","TextDetailItem","_templateObject15","ListItem","icon","text","_jsxs","xlinkHref","sprite","concat","WrappModal","ContentModal","GalleryWrapper","ImageGallery","TextModal","ListAdd","ItemAdd","LinkAdd","active","TitleModal","LocationModal","PriceModal","BtnClose","ListFeatures","ItemFeature","FeaturesWrapper","DetailsWrapper","FormWrapper","TitleText","Icon","CustomKey","castomKey","charAt","toUpperCase","slice","Row","Label","Value","VehicleDetails","id","selectedData","useSelector","selectCampers","find","item","_id","form","length","tank","consumption","FormGroup","Field","FormikField","FieldComment","ErrorMessage","FormikError","Form","FormikForm","FormTitle","FormText","FormSchema","Yup","shape","name","required","email","date","comment","Forma","Formik","initialValues","validationSchema","onSubmit","action","Notiflix","resetForm","placeholder","pattern","component","style","marginTop","marginLeft","Features","details","getIconByKey","key","Object","entries","map","_slicedToArray","value","CommonReviewsContainer","ReviewsContainer","UserReview","UserName","UserComment","Reviews","reviews","getRatingStars","rating","stars","i","push","index","Avatar","reviewer_name","reviewer_rating","Modal","customStyles","overlay","position","zIndex","overflow","content","top","left","right","bottom","marginRight","transform","ModalWindow","isOpen","onClose","data","_useState","useState","_useState2","activeTab","setActiveTab","_useState3","_useState4","isFeaturesContentVisible","setIsFeaturesContentVisible","handleTabChange","tab","_Fragment","onRequestClose","event","target","currentTarget","location","price","gallery","src","alt","description","className","Card","favorite","selectFavoriteCampers","dispatch","useDispatch","isFavorite","isModalOpen","setIsModalOpen","deleteFavorite","addFavorite","selectError","state","campers","error","selectIsLoading","isLoading","selectFilters","filters","selectFilteredLocation","createSelector","selectEquipmentFilter","equipment","selectVehicleTypeFilter","vehicleType","filter","camper","locationMatch","toLowerCase","includes","equipmentMatch","vehicleTypeMatch","Array","isArray"],"sourceRoot":""}