{"version":3,"file":"static/js/767.e592ef5d.chunk.js","mappings":"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","sources":["components/Button/Buttons.styled.js","components/Button/Button.js","components/Card/Card.styled.js","components/Card/ListItem.js","components/Modal/ModalWindow.styled.js","components/Features/Features.styled.js","components/Features/Item.js","components/VehicleDetails/VehicleDetails.styled.js","components/VehicleDetails/VehicleDetails.js","components/Forma/Forma.styled.js","components/Forma/Forma.js","components/Features/Features.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/Modal/ModalWindow.js","components/Card/Card.js","components/CardList/CardList.js","components/CardList/CardList.styled.js","components/Layout/Layout.styled.js","redux/cards/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  border-radius: 200px;\n  margin-top: ${props => props.marginTop || '0px'};\n\n  background-color: #e44848;\n  color: #f2f4f7;\n  font-size: 16px;\n  width: 166px;\n  height: 56px;\n  border: none;\n\n  transition: background-color 0.3s, border-color 0.3s;\n  &:hover {\n    background-color: #d84343;\n  }\n`;\n","import { Button } from './Buttons.styled';\n\nexport const CustomButton = ({\n  onClick,\n  variant,\n  type,\n  children,\n  hoverBorderColor,\n  border,\n  color,\n  borderColor,\n\n  ...props\n}) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant={variant}\n      type={type}\n      hoverBorderColor={hoverBorderColor}\n      border={border}\n      color={color}\n      borderColor={borderColor}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 20px;\n  padding: 24px;\n  margin: 0;\n  box-sizing: border-box;\n  max-width: 888px;\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 700px;\n  // }\n\n  // @media screen and (min-width: 1440px) {\n  //   max-width: 888px;\n  // }\n`;\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Price = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const Rating = styled.p`\n  display: inline;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-decoration: underline;\n`;\nexport const Location = styled.p`\n  display: inline;\n`;\nexport const Text = styled.p`\n  margin-bottom: 24px;\n  font-size: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\nexport const ListDetails = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const DetailItem = styled.li`\n  background-color: #f2f4f7;\n  border-radius: 100px;\n  padding: 12px 18px;\n  display: flex;\n\n  text-align: center;\n`;\nexport const Img = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n  width: 290px;\n`;\nexport const LocationWrap = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const Container = styled.div`\n  width: 526px;\n  height: 310px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nexport const ItemWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ListWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  // justify-content: space-around;\n`;\nexport const TextDetailItem = styled.p`\n  margin-left: 8px;\n`;\nexport const ButtonFavorite = styled.button`\n  background-color: transparent;\n  border: none;\n`;\n","import sprite from '../sprite.svg';\nimport { DetailItem, TextDetailItem } from './Card.styled';\n\nexport const ListItem = ({ icon, text }) => {\n  return (\n    <DetailItem>\n      <svg width=\"20px\" height=\"20px\">\n        <use xlinkHref={sprite + `#${icon}`} />\n      </svg>\n      <TextDetailItem>{text}</TextDetailItem>\n    </DetailItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const WrappModal = styled.div`\n  border-radius: 20px;\n  padding: 40px;\n  width: 982px;\n  height: 720px;\n`;\nexport const ContentModal = styled.div``;\nexport const GalleryWrapper = styled.div`\n  width: 902px;\n  // height: 310px;\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\nexport const ImageGallery = styled.img`\n  border-radius: 10px;\n  width: 290px;\n  height: 310px;\n`;\nexport const TextModal = styled.p`\n  margin-bottom: 44px;\n`;\nexport const ListAdd = styled.ul`\n  display: flex;\n  gap: 40px;\n  // margin-bottom: 24px;\n  border-bottom: 1px solid #e7e9fc;\n`;\nexport const ItemAdd = styled.li`\n  padding-bottom: 24px;\n`;\nexport const LinkAdd = styled.a`\n  color: ${({ active }) => (active ? '#E44848' : 'black')};\n  position: relative;\n  font-weight: 600;\n  font-size: 20px;\n  padding-bottom: 24px;\n  &:hover {\n    color: #e44848;\n  }\n  &::after {\n    content: ${({ active }) => (active ? '\"\"' : 'none')};\n    position: absolute;\n    width: ${({ active }) => (active ? '100%' : '0')};\n\n    height: 4px;\n    left: 0;\n    bottom: -1px;\n    background-color: #e44848;\n    border-radius: 2px;\n  }\n`;\nexport const TitleModal = styled.h2`\n  margin-bottom: 8px;\n  font-weight: 600;\n  font-size: 24px;\n`;\nexport const LocationModal = styled.p`\n  margin-bottom: 16px;\n`;\nexport const PriceModal = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 24px;\n`;\nexport const BtnClose = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n","import styled from '@emotion/styled';\nexport const ListFeatures = styled.ul`\n  margin-top: 44px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\nexport const ItemFeature = styled.li`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 100px;\n  padding: 12px 18px;\n  background: #f2f4f7;\n  display: flex;\n  gap: 8px;\n`;\nexport const FeaturesWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DetailsWrapper = styled.div`\n  width: 430px;\n`;\nexport const FormWrapper = styled.div``;\n\nexport const TitleText = styled.h2`\n  font-weight: 600;\n  border-bottom: 1px solid #e7e9fc;\n  margin-top: 44px;\n  margin-bottom: 44px;\n  padding-bottom: 24px;\n`;\nexport const ListDetails = styled.ul``;\nexport const Icon = styled.div`\n  margin-right: 8px;\n`;\n\nexport const Text = styled.div`\n  margin-right: 2px;\n`;\n\nexport const CustomKey = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { CustomKey, Icon, ItemFeature, Text } from './Features.styled';\n\nexport const Item = ({ icon, text, castomKey }) => {\n  return (\n    <ItemFeature>\n      <Icon>{icon}</Icon>\n      <Text>{text}</Text>\n      <CustomKey>\n        {castomKey.charAt(0).toUpperCase() + castomKey.slice(1)}\n      </CustomKey>\n    </ItemFeature>\n  );\n};\n","import styled from '@emotion/styled';\nexport const ItemDetails = styled.li``;\nexport const ListDetails = styled.div`\n  gap: 14px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\nexport const Label = styled.div`\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const Value = styled.div`\n  flex-grow: 1;\n  text-align: right;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Label, ListDetails, Row, Value } from './VehicleDetails.styled';\nimport { selectCampers } from '../../redux/cards/selectors';\n\nexport const VehicleDetails = ({ id }) => {\n  const data = useSelector(selectCampers);\n\n  const selectedData = data.find(item => item._id === id);\n\n  if (!selectedData) {\n    return <div>No data available</div>;\n  }\n  return (\n    <ListDetails>\n      <Row>\n        <Label>Form</Label>\n        <Value>\n          {selectedData.form.charAt(0).toUpperCase() +\n            selectedData.form.slice(1)}\n        </Value>\n      </Row>\n      <Row>\n        <Label>Length</Label>\n        <Value>{selectedData.length}</Value>\n      </Row>\n      <Row>\n        <Label>Width</Label>\n        <Value>{selectedData.width}</Value>\n      </Row>\n      <Row>\n        <Label>Height</Label>\n        <Value>{selectedData.height}</Value>\n      </Row>\n      <Row>\n        <Label>Tank</Label>\n        <Value>{selectedData.tank}</Value>\n      </Row>\n      <Row>\n        <Label>Consumption</Label>\n        <Value>{selectedData.consumption}</Value>\n      </Row>\n    </ListDetails>\n  );\n};\n","import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const FormGroup = styled.label`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n  width: 400px;\n  align-self: center;\n`;\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 56px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const FieldComment = styled(FormikField)`\n  padding: 4px;\n  border-radius: 10px;\n  width: 400px;\n  height: 114px;\n  border: none;\n  background-color: #f7f7f7;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(16, 24, 40, 0.6);\n`;\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 16px;\n  color: red;\n`;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  border: 1px solid rgba(16, 24, 40, 0.2);\n  border-radius: 10px;\n  padding: 24px;\n  width: 448px;\n\n  margin-top: 44px;\n`;\nexport const FormTitle = styled.h2`\n  font-weight: 600;\n  font-size: 20px;\n  margin-top: 24px;\n  margin-left: 24px;\n`;\nexport const FormText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  margin-left: 24px;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormText,\n  FieldComment,\n} from './Forma.styled';\nimport * as Yup from 'yup';\nimport { FormTitle } from './Forma.styled';\nimport { CustomButton } from 'components/Button/Button';\nimport Notiflix from 'notiflix';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().required('Email is required'),\n  date: Yup.string().required('Date is required'),\n  comment: Yup.string(),\n});\n\nexport const Forma = () => {\n  const handleSubmit = action => {\n    Notiflix.Notify.success(`Your order is accepted.`);\n    window.location.reload();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        date: '',\n        comment: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormTitle>Book your campervan now</FormTitle>\n        <FormText>Stay connected! We are always ready to help you.</FormText>\n        <FormGroup>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\" Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          <Field\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <Field\n            name=\"date\"\n            type=\"string\"\n            placeholder=\"Booking date\"\n            pattern=\"(0[1-9]|1[1,2])(\\/|-)(0[1-9]|[12][0-9]|3[01])(\\/|-)(19|20)\\d{2}\"\n          />\n          <ErrorMessage name=\"date\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          <FieldComment name=\"comment\" type=\"text\" placeholder=\"Comment\" />\n        </FormGroup>\n        <CustomButton\n          type=\"submit\"\n          style={{\n            marginTop: '24px',\n            marginLeft: '24px',\n          }}\n        >\n          Send\n        </CustomButton>\n      </Form>\n    </Formik>\n  );\n};\n","import {\n  DetailsWrapper,\n  FeaturesWrapper,\n  FormWrapper,\n  ListFeatures,\n  TitleText,\n} from './Features.styled';\nimport sprite from '../sprite.svg';\nimport { Item } from './Item';\nimport { VehicleDetails } from 'components/VehicleDetails/VehicleDetails';\nimport { Forma } from 'components/Forma/Forma';\n\nexport const Features = ({\n  id,\n  CD,\n  TV,\n  airConditioner,\n  bathroom,\n  beds,\n  freezer,\n  gas,\n  hob,\n  kitchen,\n  microwave,\n  radio,\n  shower,\n  toilet,\n  water,\n}) => {\n  const details = {\n    CD,\n    TV,\n    airConditioner,\n    bathroom,\n    beds,\n    freezer,\n    gas,\n    hob,\n    kitchen,\n    microwave,\n    radio,\n    shower,\n    toilet,\n    water,\n  };\n  const getIconByKey = key => {\n    switch (key) {\n      case 'airConditioner':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-air-conditioner'} />\n          </svg>\n        );\n\n      case 'bathroom':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'kitchen':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-kitchen'} />\n          </svg>\n        );\n      case 'beds':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-bed'} />\n          </svg>\n        );\n      case 'TV':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-tv'} />\n          </svg>\n        );\n      case 'CD':\n        return (\n          <svg width=\"16px\" height=\"16px\">\n            <use xlinkHref={sprite + '#icon-cd'} />\n          </svg>\n        );\n      case 'radio':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-radio'} />\n          </svg>\n        );\n      case 'shower':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-shower'} />\n          </svg>\n        );\n      case 'toilet':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-toilet'} />\n          </svg>\n        );\n      case 'freezer':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-freezer'} />\n          </svg>\n        );\n      case 'hob':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-hob'} />\n          </svg>\n        );\n      case 'microwave':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-microwave'} />\n          </svg>\n        );\n      case 'gas':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-gas'} />\n          </svg>\n        );\n      case 'water':\n        return (\n          <svg width=\"20px\" height=\"20px\">\n            <use xlinkHref={sprite + '#icon-water'} />\n          </svg>\n        );\n\n      default:\n        return null; // Повертаємо null, якщо іконка не знайдена\n    }\n  };\n  return (\n    <FeaturesWrapper>\n      <DetailsWrapper>\n        <ListFeatures>\n          {details &&\n            Object.entries(details).map(([key, value]) => {\n              if (value !== 0 && value !== false) {\n                return (\n                  <Item\n                    key={key}\n                    icon={getIconByKey(key)}\n                    text={value}\n                    castomKey={key}\n                  />\n                );\n              }\n              return null;\n            })}\n        </ListFeatures>\n        <TitleText>Vehicle details</TitleText>\n        <VehicleDetails id={id} />\n      </DetailsWrapper>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </FeaturesWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nexport const CommonReviewsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ReviewsContainer = styled.div`\n  width: 430px;\n  margin-top: 44px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const UserReview = styled.div``;\nexport const UserName = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n`;\nexport const UserRating = styled.p``;\nexport const UserComment = styled.p``;\n","import sprite from '../sprite.svg';\nimport { FormWrapper } from 'components/Features/Features.styled';\nimport {\n  CommonReviewsContainer,\n  ReviewsContainer,\n  UserComment,\n  UserName,\n  UserReview,\n} from './Reviews.styled';\nimport { Forma } from 'components/Forma/Forma';\nimport { Avatar } from '@mui/material';\n\nexport const Reviews = ({ reviews }) => {\n  const getRatingStars = rating => {\n    let stars = [];\n    for (let i = 1; i <= 5; i++) {\n      const color = i <= rating ? '#ffc531' : '#f2f4f7';\n\n      stars.push(\n        <svg key={i} width=\"16px\" height=\"16px\" fill={color} stroke={color}>\n          <use xlinkHref={`${sprite}#icon-Rating`} />\n        </svg>\n      );\n    }\n    console.log(stars);\n    return stars;\n  };\n\n  return (\n    <CommonReviewsContainer>\n      <ReviewsContainer>\n        {reviews.map((item, index) => (\n          <UserReview key={index}>\n            <Avatar>{item.reviewer_name.charAt(0).toUpperCase()}</Avatar>\n            <UserName>{item.reviewer_name}</UserName>\n\n            {getRatingStars(item.reviewer_rating)}\n\n            <UserComment> {item.comment}</UserComment>\n          </UserReview>\n        ))}\n      </ReviewsContainer>\n      <FormWrapper>\n        <Forma />\n      </FormWrapper>\n    </CommonReviewsContainer>\n  );\n};\n","import { LocationWrap, Rating, TitleBox } from 'components/Card/Card.styled';\nimport {\n  ContentModal,\n  GalleryWrapper,\n  ImageGallery,\n  LinkAdd,\n  ListAdd,\n  TextModal,\n  WrappModal,\n  TitleModal,\n  LocationModal,\n  PriceModal,\n  ItemAdd,\n  BtnClose,\n} from './ModalWindow.styled';\nimport Modal from 'react-modal';\nimport sprite from '../sprite.svg';\nimport { useState } from 'react';\nimport { Features } from 'components/Features/Features';\nimport { Reviews } from 'components/Reviews/Reviews';\nModal.setAppElement('#root');\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    width: '100vw',\n    height: '100vh',\n    zIndex: '1200',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    overflow: 'aria-hidden',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nexport const ModalWindow = ({ isOpen, onClose, data }) => {\n  const [activeTab, setActiveTab] = useState('features');\n  const [isFeaturesContentVisible, setIsFeaturesContentVisible] =\n    useState(false);\n\n  const handleTabChange = tab => {\n    setActiveTab(tab === activeTab ? null : tab);\n    setIsFeaturesContentVisible(tab === 'features');\n  };\n  const closeOnWrapper = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return (\n    <>\n      {isOpen && (\n        <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n          <WrappModal onClick={closeOnWrapper}>\n            <ContentModal>\n              <div>\n                <TitleBox>\n                  <TitleModal>{data.name}</TitleModal>\n                  <BtnClose onClick={onClose}>\n                    <svg width=\"20px\" height=\"20px\">\n                      <use xlinkHref={sprite + '#icon-close'} />\n                    </svg>\n                  </BtnClose>\n                </TitleBox>\n                <LocationWrap>\n                  <Rating>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-Rating'} />\n                    </svg>\n                    {data.rating} ({data.reviews.length} Reviews)\n                  </Rating>\n                  <LocationModal>\n                    <svg width=\"16px\" height=\"16px\">\n                      <use xlinkHref={sprite + '#icon-map-pin'} />\n                    </svg>{' '}\n                    {data.location}\n                  </LocationModal>\n                </LocationWrap>\n                <PriceModal>€{data.price},00</PriceModal>\n                <GalleryWrapper>\n                  {data.gallery.map((name, index) => (\n                    <ImageGallery\n                      key={index}\n                      src={name}\n                      alt={`Image ${index + 1}`}\n                    />\n                  ))}\n                </GalleryWrapper>\n                <TextModal>{data.description}</TextModal>\n              </div>\n              <ListAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => handleTabChange('features')}\n                    active={activeTab === 'features'}\n                    className={activeTab === 'features' ? 'active' : ''}\n                  >\n                    Features\n                  </LinkAdd>\n                </ItemAdd>\n                <ItemAdd>\n                  <LinkAdd\n                    onClick={() => {\n                      handleTabChange('reviews');\n                    }}\n                    active={activeTab === 'reviews'}\n                    className={activeTab === 'reviews' ? 'active' : ''}\n                  >\n                    Reviews\n                  </LinkAdd>\n                </ItemAdd>\n              </ListAdd>\n              {isFeaturesContentVisible && <Features id={data._id} {...data} />}\n              {activeTab === 'reviews' && <Reviews reviews={data.reviews} />}\n            </ContentModal>\n          </WrappModal>\n        </Modal>\n      )}\n    </>\n  );\n};\n","import sprite from '../sprite.svg';\nimport { CustomButton } from 'components/Button/Button';\n\nimport {\n  Title,\n  Price,\n  Rating,\n  Location,\n  Text,\n  Item,\n  Img,\n  Container,\n  TitleBox,\n  ItemWrapper,\n  LocationWrap,\n  ListDetails,\n  ListWrap,\n  ButtonFavorite,\n} from './Card.styled';\nimport { ListItem } from './ListItem';\nimport { useState } from 'react';\n\nimport { ModalWindow } from 'components/Modal/ModalWindow';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFavoriteCampers } from '../../redux/cards/selectors';\nimport { addFavorite, deleteFavorite } from '../../redux/cards/campersSlice';\nModal.setAppElement('#modal');\n\nexport const Card = ({\n  _id,\n  name,\n  price,\n  rating,\n  location,\n  description,\n  gallery,\n  reviews,\n  CD,\n  TV,\n  airConditioner,\n  bathroom,\n  beds,\n  freezer,\n  gas,\n  hob,\n  kitchen,\n  microwave,\n  radio,\n  shower,\n  toilet,\n  water,\n}) => {\n  const favorite = useSelector(selectFavoriteCampers);\n  const dispatch = useDispatch();\n  const isFavorite = favorite.find(item => item._id === _id);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleShowMore = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleFavoriteToggle = () => {\n    isFavorite\n      ? dispatch(\n          deleteFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            CD,\n            TV,\n            airConditioner,\n            bathroom,\n            beds,\n            freezer,\n            gas,\n            hob,\n            kitchen,\n            microwave,\n            radio,\n            shower,\n            toilet,\n            water,\n          })\n        )\n      : dispatch(\n          addFavorite({\n            _id,\n            name,\n            price,\n            rating,\n            location,\n            description,\n            gallery,\n            reviews,\n            CD,\n            TV,\n            airConditioner,\n            bathroom,\n            beds,\n            freezer,\n            gas,\n            hob,\n            kitchen,\n            microwave,\n            radio,\n            shower,\n            toilet,\n            water,\n          })\n        );\n  };\n  const iconData = [\n    { icon: 'icon-adults', text: '3 adults' },\n    { icon: 'automatic-1', text: 'Automatic' },\n    { icon: 'icon-petrol', text: 'Petrol' },\n    { icon: 'icon-kitchen', text: 'Kitchen' },\n    { icon: 'icon-bed', text: '2 beds' },\n    { icon: 'ac-1', text: 'AC' },\n  ];\n\n  return (\n    <Item>\n      <ItemWrapper>\n        <Img src={gallery[0]} alt={name} />\n\n        <Container>\n          <TitleBox>\n            <Title>{name}</Title>\n            <Price>\n              €{price.toFixed(2)}\n              {/* {Number(price).toLocaleString('en', { minimumFractionDigits: 2 })} */}\n            </Price>\n            <ButtonFavorite onClick={handleFavoriteToggle} type=\"button\">\n              {isFavorite ? (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart-fill'} />\n                </svg>\n              ) : (\n                <svg width=\"16px\" height=\"16px\">\n                  <use xlinkHref={sprite + '#icon-heart'} />\n                </svg>\n              )}\n            </ButtonFavorite>\n          </TitleBox>\n\n          <LocationWrap>\n            <Rating>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-Rating'} />\n              </svg>\n              {rating} ({reviews.length} Reviews)\n            </Rating>\n            <Location>\n              <svg width=\"16px\" height=\"16px\">\n                <use xlinkHref={sprite + '#icon-map-pin'} />\n              </svg>\n              {location}\n            </Location>\n          </LocationWrap>\n          <Text>{description} ...</Text>\n          <ListWrap>\n            <ListDetails>\n              {iconData.map((item, index) => (\n                <ListItem key={index} icon={item.icon} text={item.text} />\n              ))}\n            </ListDetails>\n            <CustomButton\n              onClick={handleShowMore}\n              type=\"button\"\n              hoverBackgroundColor=\"#d84343\"\n            >\n              Show More\n            </CustomButton>\n          </ListWrap>\n        </Container>\n      </ItemWrapper>\n      <ModalWindow\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        data={{\n          _id,\n          name,\n          price,\n          rating,\n          location,\n          reviews,\n          gallery,\n          description,\n          CD,\n          TV,\n          airConditioner,\n          bathroom,\n          beds,\n          freezer,\n          gas,\n          hob,\n          kitchen,\n          microwave,\n          radio,\n          shower,\n          toilet,\n          water,\n        }}\n      ></ModalWindow>\n    </Item>\n  );\n};\n","import React from 'react';\n\nimport { Card } from 'components/Card/Card';\nimport { StyledList } from './CardList.styled';\n\nexport const CardList = ({ campers }) => {\n  return (\n    <StyledList>\n      {campers.map(camper => (\n        <Card key={camper._id} {...camper} />\n      ))}\n    </StyledList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  justify-content: center;\n`;\nexport const AdvertsSection = styled.main`\n  flex-grow: 1;\n  margin-top: 64px;\n`;\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  //   padding-left: 40px;\n  //   padding-right: 40px;\n  display: flex;\n  margin: 0 auto;\n  justify-content: space-between;\n\n  max-width: 375px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    // padding-left: 32px;\n    // padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n//     padding-left: 85px;\n//     padding-right: 85px;\n//   }\n`;\n","import { createSelector } from 'reselect';\nexport const selectError = state => state.campers.error;\nexport const selectIsLoading = state => state.campers.isLoading;\nexport const selectCampers = state => state.campers.campers;\nexport const selectFilters = state => state.campers.filters;\nexport const selectFavoriteCampers = state => state.campers.favorite;\n\nexport const selectFilteredLocation = createSelector(\n  [selectFilters],\n  filters => filters.location\n);\n\nexport const selectEquipmentFilter = createSelector(\n  [selectFilters],\n  filters => filters.equipment\n);\n\nexport const selectVehicleTypeFilter = createSelector(\n  [selectFilters],\n  filters => filters.vehicleType\n);\n\n// export const selectFilteredCampers = createSelector(\n//   [\n//     selectCampers,\n//     selectFilteredLocation,\n//     selectEquipmentFilter,\n//     selectVehicleTypeFilter,\n//   ],\n//   (campers, location, equipment, vehicleType) => {\n//     return campers.filter(camper => {\n//       const locationMatch =\n//         !location ||\n//         camper.location.toLowerCase().includes(location.toLowerCase());\n\n//       const equipmentMatch =\n//         !equipment ||\n//         (typeof equipment === 'string' &&\n//           camper.details[equipment.toLowerCase()]);\n\n//       const vehicleTypeMatch =\n//         !vehicleType ||\n//         (Array.isArray(vehicleType) &&\n//           vehicleType.includes(camper.form.toLowerCase()));\n\n//       return locationMatch && equipmentMatch && vehicleTypeMatch;\n//     });\n//   }\n// );\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","props","marginTop","CustomButton","_ref","onClick","variant","type","children","hoverBorderColor","border","color","borderColor","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Item","Title","_templateObject2","Price","_templateObject3","Rating","_templateObject4","Location","_templateObject5","Text","_templateObject6","ListDetails","_templateObject7","DetailItem","_templateObject8","Img","_templateObject9","LocationWrap","_templateObject10","Container","_templateObject11","TitleBox","_templateObject12","ItemWrapper","_templateObject13","ListWrap","_templateObject14","TextDetailItem","_templateObject15","ButtonFavorite","_templateObject16","ListItem","icon","text","_jsxs","width","height","xlinkHref","sprite","concat","WrappModal","ContentModal","GalleryWrapper","ImageGallery","TextModal","ListAdd","ItemAdd","LinkAdd","active","_ref2","_ref3","TitleModal","LocationModal","PriceModal","BtnClose","ListFeatures","ItemFeature","FeaturesWrapper","DetailsWrapper","FormWrapper","TitleText","Icon","CustomKey","castomKey","charAt","toUpperCase","slice","Row","Label","Value","VehicleDetails","id","selectedData","useSelector","selectCampers","find","item","_id","form","length","tank","consumption","FormGroup","Field","FormikField","FieldComment","ErrorMessage","FormikError","Form","FormikForm","FormTitle","FormText","FormSchema","Yup","shape","name","required","email","date","comment","Forma","Formik","initialValues","validationSchema","onSubmit","action","Notiflix","window","location","reload","placeholder","pattern","component","style","marginLeft","Features","details","CD","TV","airConditioner","bathroom","beds","freezer","gas","hob","kitchen","microwave","radio","shower","toilet","water","getIconByKey","key","Object","entries","map","_slicedToArray","value","CommonReviewsContainer","ReviewsContainer","UserReview","UserName","UserComment","Reviews","reviews","getRatingStars","rating","stars","i","push","fill","stroke","console","log","index","Avatar","reviewer_name","reviewer_rating","Modal","customStyles","overlay","position","zIndex","backgroundColor","overflow","content","top","left","right","bottom","marginRight","transform","ModalWindow","isOpen","onClose","data","_useState","useState","_useState2","activeTab","setActiveTab","_useState3","_useState4","isFeaturesContentVisible","setIsFeaturesContentVisible","handleTabChange","tab","_Fragment","onRequestClose","event","target","currentTarget","price","gallery","src","alt","description","className","Card","favorite","selectFavoriteCampers","dispatch","useDispatch","isFavorite","isModalOpen","setIsModalOpen","toFixed","deleteFavorite","addFavorite","hoverBackgroundColor","CardList","campers","StyledList","camper","AdvertsSection","selectError","state","error","selectIsLoading","isLoading","selectFilters","filters","selectFilteredLocation","createSelector","selectEquipmentFilter","equipment","selectVehicleTypeFilter","vehicleType"],"sourceRoot":""}